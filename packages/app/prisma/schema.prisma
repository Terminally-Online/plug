generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "omitApi"]
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model FarcasterUserAddress {
  // ---------------------------------------------------------------------------
  // Core
  // ---------------------------------------------------------------------------
  id        String   @id
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  // ---------------------------------------------------------------------------
  // Many-to-many
  // ---------------------------------------------------------------------------
  farcasterUsers FarcasterUser[] @relation("FarcasterAddresses")
}

model FarcasterUser {
  // ---------------------------------------------------------------------------
  // Core
  // ---------------------------------------------------------------------------
  id        String   @id
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  // ---------------------------------------------------------------------------
  // One-to-one
  // ---------------------------------------------------------------------------
  identity SocketIdentity?

  // ---------------------------------------------------------------------------
  // Many-to-many
  // ---------------------------------------------------------------------------
  addresses FarcasterUserAddress[] @relation("FarcasterAddresses")
  followers FarcasterUser[]        @relation("FarcasterFollows")
  following FarcasterUser[]        @relation("FarcasterFollows")
}

model ENS {
  // ---------------------------------------------------------------------------
  // Core
  // ---------------------------------------------------------------------------
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  // ---------------------------------------------------------------------------
  // Fields
  // ---------------------------------------------------------------------------
  name   String
  avatar String?

  // ---------------------------------------------------------------------------
  // One-to-one
  // ---------------------------------------------------------------------------
  identity SocketIdentity @relation(fields: [socketId], references: [socketId], onDelete: Cascade)
  socketId String         @id

  @@index([name])
}

model SocketIdentity {
  // ---------------------------------------------------------------------------
  // Core
  // ---------------------------------------------------------------------------
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  // ---------------------------------------------------------------------------
  // Fields
  // ---------------------------------------------------------------------------
  referralCode    String    @default(uuid())
  requestedAt     DateTime?
  approvedAt      DateTime?
  onboardingAt    DateTime?
  onboardedAt     DateTime?
  onboardingColor String?
  onboardingCount Int       @default(autoincrement())

  // ---------------------------------------------------------------------------
  // One-to-one
  // ---------------------------------------------------------------------------
  socket      Socket         @relation(fields: [socketId], references: [id], onDelete: Cascade)
  socketId    String         @id @unique
  farcaster   FarcasterUser? @relation(fields: [farcasterId], references: [id], onDelete: SetNull)
  farcasterId String?        @unique
  ens         ENS?

  // ---------------------------------------------------------------------------
  // Many-to-one
  // ---------------------------------------------------------------------------
  referrer   Socket? @relation(fields: [referrerId], references: [id], name: "Referral")
  referrerId String?
}

model Socket {
  // ---------------------------------------------------------------------------
  // Core
  // ---------------------------------------------------------------------------
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  // ---------------------------------------------------------------------------
  // Fields
  // ---------------------------------------------------------------------------
  admin                    Boolean @default(false)
  socketAddress            String
  deploymentFactory        String?
  deploymentNonce          Int?
  deploymentDelegate       String?
  deploymentImplementation String?
  deploymentSalt           String?

  // ---------------------------------------------------------------------------
  // One-to-one
  // ---------------------------------------------------------------------------
  identity SocketIdentity?

  // ---------------------------------------------------------------------------
  // One-to-many
  // ---------------------------------------------------------------------------
  plugs        Plug[]
  referrals    SocketIdentity[]   @relation("Referral")

  // ---------------------------------------------------------------------------
  // Indexes
  // ---------------------------------------------------------------------------
  @@index([socketAddress])
}

model View {
  // ---------------------------------------------------------------------------
  // Core
  // ---------------------------------------------------------------------------
  date  DateTime
  views Int      @default(0)

  // ---------------------------------------------------------------------------
  // Many-to-one
  // ---------------------------------------------------------------------------
  plug   Plug   @relation(fields: [plugId], references: [id], onDelete: Cascade)
  plugId String

  @@id([plugId, date])
  @@index([date])
}

model Plug {
  // ---------------------------------------------------------------------------
  // Core
  // ---------------------------------------------------------------------------
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  namedAt   DateTime?
  renamedAt DateTime?

  // ---------------------------------------------------------------------------
  // Fields
  // ---------------------------------------------------------------------------
  name         String   @default("Untitled")
  isCurated    Boolean  @default(false)
  isPrivate    Boolean  @default(false)
  actions      String   @default("[]")
  color        String
  tags         String[] @default([])
  plugForkedId String?
  frequency    Int      @default(10)
  intentIds    String[] @default([])

  // ---------------------------------------------------------------------------
  // Many-to-one
  // ---------------------------------------------------------------------------
  socket   Socket @relation(fields: [socketId], references: [id], onDelete: Cascade)
  socketId String

  // ---------------------------------------------------------------------------
  // One-to-many
  // ---------------------------------------------------------------------------
  views View[]
}
