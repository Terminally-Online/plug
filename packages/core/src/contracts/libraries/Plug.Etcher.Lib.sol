// SPDX-License-Identifier: MIT

pragma solidity ^0.8.26;

import { PlugLib } from "../libraries/Plug.Lib.sol";

import { PlugFactory } from "../base/Plug.Factory.sol";
import { PlugSocket } from "../base/Plug.Socket.sol";
import { Plug } from "../base/Plug.sol";

interface ImmutableCreate2Factory {
    function safeCreate2(
        bytes32 salt,
        bytes calldata initCode
    )
        external
        payable
        returns (address deploymentAddress);

    function findCreate2Address(
        bytes32 salt,
        bytes calldata initCode
    )
        external
        view
        returns (address deploymentAddress);

    function findCreate2AddressViaHash(
        bytes32 salt,
        bytes32 initCodeHash
    )
        external
        view
        returns (address deploymentAddress);
}

/**
 * @title Plug Etcher
 * @notice This contract is the basis of the automatically generated Plug Etcher
 *         contract used to deploy and write the proper addresses. If you need to add
 *         a new etch into the vm stack for testing, you will do so through the file
 *         found at: /lib/functions/etcher.ts
 * @notice A good portion of this model comes from:
 *         https://github.com/Vectorized/multicaller/blob/main/src/MulticallerEtcher.sol
 *         I am not a Foundry expert. If there is a better way to do this, please let me
 *         know because this is a lot of work just to get a contract deployed when you're
 *         doing anything more than a simple in-and-out contract.
 * @author vectorized (twitter:@optimizoor)
 */
library PlugEtcherLib {
    /// @notice The immutable Create2 factory used for deployment.
    ImmutableCreate2Factory internal constant FACTORY =
        ImmutableCreate2Factory(0x0000000000FFe8B47B3e2130213B802212439497);

    bytes internal constant PLUG_FACTORY_INITCODE =
        hex"60808060405234601557610610908161001b8239f35b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c908162774360146101735750806375fd9f281461012e57637ac4ed641461004157600080fd5b3461012b5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261012b576020906100f161007e61056b565b90604051917fcc3735a920a3ca505d382bbc545af43d6000803e6038573d6000fd5b3d6000f36060527f5155f3363d3d373d3d363d7f360894a13ba1a3210667c828492db98dca3e2076604052616009602052601e5268603d3d8160223d3973600a52605f602120916040526000606052565b60ff82536035523060601b600152602435601552605581209060355273ffffffffffffffffffffffffffffffffffffffff60405191168152f35b80fd5b503461012b5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261012b57602061016b61007e61056b565b604051908152f35b905060207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610567576004359067ffffffffffffffff8211610468573660238301121561046857816004013567ffffffffffffffff811161056357366024828501011161056357608011610507575060448101359073ffffffffffffffffffffffffffffffffffffffff821673ffffffffffffffffffffffffffffffffffffffff60848301351691821580156104ff575b6104cf576040517fffffffffffffffffffffffffffffffffffffffff00000000000000000000000060208201957fffffffffffffffffffffffff0000000000000000000000000000000000000000602485013560a01b16875260601b16602c82015260208152610298604082610593565b519351936020811061049b575b5084926040517fcc3735a920a3ca505d382bbc545af43d6000803e6038573d6000fd5b3d6000f36060527f5155f3363d3d373d3d363d7f360894a13ba1a3210667c828492db98dca3e207660405261600960205281601e5268603d3d8160223d3973600a52605f60212060358201523060581b815260ff81538560158201526055812094341590863b1561047e57506001906104795787388180348a5af11561046c575b816040528760605215958661037f575b604080518815815273ffffffffffffffffffffffffffffffffffffffff88166020820152f35b917f32c7564be3bbeabe66360c08d019367b0d744fcb948046d92552c00c9743dd106020838a9695889552a373ffffffffffffffffffffffffffffffffffffffff8416803b15610468576064938360449273ffffffffffffffffffffffffffffffffffffffff60405197889687957f485cc955000000000000000000000000000000000000000000000000000000008752600487015201351660248401525af1801561045d579373ffffffffffffffffffffffffffffffffffffffff929160409561044d575b829381610359565b8161045791610593565b38610445565b6040513d86823e3d90fd5b8280fd5b63b12d13eb88526004601cfd5b610349565b95505085605f602134f5948561034957633011642588526004601cfd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9060209592950360031b1b1692386102a5565b60448583857f54f044c4000000000000000000000000000000000000000000000000000000008352600452602452fd5b508115610227565b807f08c379a0000000000000000000000000000000000000000000000000000000006064925260206004820152601760248201527f506c7567436f72653a73616c742d6d616c666f726d65640000000000000000006044820152fd5b8380fd5b5080fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361058e57565b600080fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176105d457604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea164736f6c634300081a000a";

    bytes32 internal constant PLUG_FACTORY_SALT =
        0x0000000000000000000000000000000000000000ddafc4c8641a8337c42f493f;

    address internal constant PLUG_FACTORY_ADDRESS =
        0x00000000026dF9927AE0fB3CFB5f4ce0298f6C45;

    bytes internal constant PLUG_SOCKET_INITCODE =
        hex"60a060405234607657306080526001638b78c6d81955600160007f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a3600160005260026020526040600020600160ff198254161790556040516127a4908161007c8239608051818181610b990152610cbd0152f35b600080fdfe60806040526004361015610015575b366119bc57005b60003560e01c806301ccda3f146101f557806306fdde03146101f057806308f41527146101eb57806325692962146101e65780632cad14b5146101e157806331a71e84146101dc57806334bb3700146101d75780633ea47844146101d2578063485cc955146101cd5780634f1ef286146101c857806352d1902d146101c357806354d1f13d146101be57806354fd4d50146101b957806360cd27ad146101b45780636f69f3d6146101af578063715018a6146101aa578063812a4729146101a557806385ab746d146101a05780638954bf061461019b5780638da5cb5b1461019657806395d89b4114610191578063c2fb26a61461018c578063c653f6b814610187578063dfe86ac514610182578063e43a0c231461017d578063efb22cdc14610178578063f04e283e14610173578063f2fde38b1461016e578063f8549c59146101695763fee81cf40361000e576113a0565b611365565b611325565b6112cf565b6111da565b6111c2565b6111a4565b61115f565b6110ee565b611031565b610ff9565b610fa4565b610f69565b610f2e565b610ee2565b610df0565b610d6f565b610d53565b610d0b565b610ca9565b610b40565b610a8e565b61089d565b6107d7565b6107bf565b610781565b6105f1565b6105ac565b61056a565b6104df565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6080810190811067ffffffffffffffff82111761024557604052565b6101fa565b6040810190811067ffffffffffffffff82111761024557604052565b90601f601f19910116810190811067ffffffffffffffff82111761024557604052565b67ffffffffffffffff81116102455760051b60200190565b67ffffffffffffffff811161024557601f01601f191660200190565b9291926102c9826102a1565b916102d76040519384610266565b8294818452818301116102f4578281602093846000960137010152565b600080fd5b9080601f830112156102f457816020610314933591016102bd565b90565b60ff8116036102f457565b91908260809103126102f45760405161033a81610229565b6060808294803561034a81610317565b8452602081013560208501526040810135604085015201359161036c83610317565b0152565b81601f820112156102f45780359061038782610289565b926103956040519485610266565b828452602060a08186019402830101918183116102f457602001925b8284106103bf575050505090565b600060a0858403126103fc5750602060a0916040516103dd8161024a565b863581526103ed85848901610322565b838201528152019301926103b1565b80fd5b91906040838203126102f457604051906104188261024a565b8193803567ffffffffffffffff81116102f457826104379183016102f9565b835260208101359167ffffffffffffffff83116102f45760209261045b9201610370565b910152565b9080601f830112156102f457813561047781610289565b926104856040519485610266565b81845260208085019260051b820101918383116102f45760208201905b8382106104b157505050505090565b813567ffffffffffffffff81116102f4576020916104d4878480948801016103ff565b8152019101906104a2565b346102f45760206003193601126102f45760043567ffffffffffffffff81116102f45761051a6105156020923690600401610460565b611454565b604051908152f35b60005b8381106105355750506000910152565b8181015183820152602001610525565b90601f19601f60209361056381518092818752878088019101610522565b0116010190565b346102f45760006003193601126102f45761059a610586611497565b604051918291602083526020830190610545565b0390f35b908160409103126102f45790565b346102f45760206003193601126102f45760043567ffffffffffffffff81116102f45761051a6105ec6020926105e73691369060040161059e565b6106fa565b6114d2565b60006003193601126102f45763389a75e1600c52336000526202a30042016020600c2055337fdbf36a107da19e49527a7176a1babf963b4b0ff8cde35ee35d6cd8f1f9ac7e1d600080a2005b73ffffffffffffffffffffffffffffffffffffffff8116036102f457565b35906106668261063d565b565b91906080838203126102f4576040519061068182610229565b819361068c8161065b565b8352602081013567ffffffffffffffff81116102f457826106ae918301610460565b6020840152604081013567ffffffffffffffff81116102f457826106d39183016102f9565b604084015260608101359167ffffffffffffffff83116102f45760609261045b92016102f9565b91906040838203126102f457604051906107138261024a565b8193803567ffffffffffffffff81116102f45782610732918301610668565b835260208101359167ffffffffffffffff83116102f45760209261045b92016102f9565b60206003198201126102f4576004359067ffffffffffffffff82116102f457610314916004016106fa565b346102f457602061051a6105ec36610756565b60206003198201126102f4576004359067ffffffffffffffff82116102f45761031491600401610668565b346102f457602061051a6107d236610794565b611533565b346102f45760206003193601126102f45760043567ffffffffffffffff81116102f457608060031982360301126102f4576040519061081582610229565b806004013567ffffffffffffffff81116102f45761083990600436918401016102f9565b825260248101359167ffffffffffffffff83116102f457606461088d9261086961059a95600436918401016102f9565b60208401526044810135604084015201356108838161063d565b6060820152611584565b6040519081529081906020820190565b60406003193601126102f45760043567ffffffffffffffff81116102f4576108c990369060040161059e565b6024356108d58161063d565b3068929eee149b4bd212685414610a80573068929eee149b4bd212685561092761090a6107d2610905858061165e565b6119f4565b61092161091a60208601866119ff565b36916102bd565b90611fd7565b61096461095361094d61094761093d878061165e565b60608101906119ff565b90611a50565b60a01c90565b6bffffffffffffffffffffffff1690565b6001610987826001908060081c6000528160205260ff60406000205491161c1690565b151514610a75576109b1908060081c6000526001602052600160ff604060002092161b8154179055565b6109e56109de8273ffffffffffffffffffffffffffffffffffffffff166000526002602052604060002090565b5460ff1690565b908115610a4b575b5015610a0a576109fc91611691565b3868929eee149b4bd2126855005b610a47610a1561160b565b6040519182917fb921d87d00000000000000000000000000000000000000000000000000000000835260048301611646565b0390fd5b905073ffffffffffffffffffffffffffffffffffffffff80638b78c6d819549216911614386109ed565b610a47610a15611ab6565b63ab143c066000526004601cfd5b346102f45760406003193601126102f45773ffffffffffffffffffffffffffffffffffffffff600435610ac08161063d565b8160243591610ace8361063d565b1680638b78c6d8195560007f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a31680610b0557005b6000526002602052604060002060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00825416179055600080f35b60406003193601126102f457600435610b588161063d565b6024359067ffffffffffffffff82116102f457366023830112156102f45781600401359067ffffffffffffffff82116102f45736602483850101116102f4577f00000000000000000000000000000000000000000000000000000000000000003014610c9b5773ffffffffffffffffffffffffffffffffffffffff90610bdc611f6e565b163d6000526352d1902d6001527f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc602060016004601d855afa5103610c8d57807fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a281817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55610c6b57005b816000926024604051950185378338925af415610c8457005b3d6000823e3d90fd5b6355299b496001526004601dfd5b639f03a0266000526004601cfd5b346102f45760006003193601126102f457307f000000000000000000000000000000000000000000000000000000000000000003610c9b5760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b60006003193601126102f45763389a75e1600c523360005260006020600c2055337ffa7b8eab7da67f412cc9575ed43464468f9bfbae89d1675917346ca6d8fe3c92600080a2005b346102f45760006003193601126102f45761059a61058661173c565b346102f45760206003193601126102f45773ffffffffffffffffffffffffffffffffffffffff600435610da18161063d565b166000526002602052602060ff604060002054166040519015158152f35b9181601f840112156102f45782359167ffffffffffffffff83116102f4576020808501948460051b0101116102f457565b346102f45760406003193601126102f45760043567ffffffffffffffff81116102f457610e21903690600401610dbf565b60243567ffffffffffffffff81116102f457610e41903690600401610dbf565b610e4c929192611f6e565b60005b828110610e5857005b610e63818386611777565b359081151582036102f457610edc60019273ffffffffffffffffffffffffffffffffffffffff610e9484888b611777565b35610e9e8161063d565b16600052600260205260406000209060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083541691151516179055565b01610e4f565b60006003193601126102f457610ef6611f6e565b6000638b78c6d819547f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a36000638b78c6d81955005b346102f45760206003193601126102f45760043567ffffffffffffffff81116102f45761051a610f646020923690600401610370565b611787565b346102f45760a06003193601126102f457602061051a604051610f8b8161024a565b6004358152610f9b366024610322565b838201526117b7565b346102f45760806003193601126102f457602061051a604051610fc681610229565b600435610fd281610317565b8152602435838201526044356040820152606435610fef81610317565b606082015261180b565b346102f45760006003193601126102f4576020638b78c6d8195473ffffffffffffffffffffffffffffffffffffffff60405191168152f35b346102f45760006003193601126102f45761059a60408051906110548183610266565b600582527f504c554753000000000000000000000000000000000000000000000000000000602083015251918291602083526020830190610545565b60208152608073ffffffffffffffffffffffffffffffffffffffff60606110db6110c5865185602088015260a0870190610545565b6020870151601f19878303016040880152610545565b9460408101518286015201511691015290565b346102f45760006003193601126102f4576000606060405161110f81610229565b818152816020820152826040820152015261059a61112b611497565b61113361173c565b6040519161114083610229565b8252602082015246604082015230606082015260405191829182611090565b346102f457602061118661117236610756565b8261117d8251611533565b91015190611fd7565b73ffffffffffffffffffffffffffffffffffffffff60405191168152f35b346102f45760006003193601126102f4576020600054604051908152f35b346102f457602061051a6111d536610794565b611874565b60206003193601126102f45760043567ffffffffffffffff81116102f457608060031982360301126102f4573068929eee149b4bd212685414610a80573068929eee149b4bd212685573ffffffffffffffffffffffffffffffffffffffff638b78c6d8195416331480156112c6575b1561125a576109fc90600401611903565b610a47604080519061126c8183610266565b601782527f506c7567436f72653a73656e6465722d696e76616c69640000000000000000006020830152519182917fb921d87d00000000000000000000000000000000000000000000000000000000835260048301611646565b50303314611249565b60206003193601126102f4576004356112e78161063d565b6112ef611f6e565b63389a75e1600c52806000526020600c2090815442116113175760006113159255611f8b565b005b636f5e88186000526004601cfd5b60206003193601126102f45760043561133d8161063d565b611345611f6e565b8060601b156113575761131590611f8b565b637448fbae6000526004601cfd5b346102f45760206003193601126102f45760043567ffffffffffffffff81116102f45761051a61139b60209236906004016103ff565b611962565b346102f45760206003193601126102f4576004356113bd8161063d565b63389a75e1600c52600052602080600c2054604051908152f35b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b805182101561141a5760209160051b010190565b6113d7565b6020806106669294939460405195816114418893518092868087019101610522565b8201908382015203018085520183610266565b60009060605b815183101561148a5761148260019161147c6114768686611406565b51611962565b9061141f565b92019161145a565b9150506020815191012090565b604051906114a6604083610266565b600b82527f506c756720536f636b65740000000000000000000000000000000000000000006020830152565b60206114de8251611874565b910151602081519101206040519060208201927f858fa8b1b482c729dcb5ae30adab7db7ed354ebaba182da4ff91412001f7fd458452604083015260608201526060815261152d608082610266565b51902090565b61153f60005491611874565b6040519060208201927f19010000000000000000000000000000000000000000000000000000000000008452602283015260428201526042815261152d606282610266565b805160208151910120906020810151602081519101209073ffffffffffffffffffffffffffffffffffffffff6060604083015192015116906040519260208401947f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f865260408501526060840152608083015260a082015260a0815261152d60c082610266565b6040519061161a604083610266565b601a82527f506c7567436f72653a7369676e61747572652d696e76616c69640000000000006020830152565b9060406103149260ff81528160208201520190610545565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81813603018212156102f4570190565b61169b908061165e565b906116a960408301836119ff565b806116bb575b50505061066690611dc8565b60401161173157803542116117265773ffffffffffffffffffffffffffffffffffffffff61170a6116f16116f183946020013590565b73ffffffffffffffffffffffffffffffffffffffff1690565b921691160361171b573880806116af565b610a47610a15611b67565b610a47610a15611b2c565b610a47610a15611af1565b6040519061174b604083610266565b600582527f302e302e310000000000000000000000000000000000000000000000000000006020830152565b919081101561141a5760051b0190565b60009060605b815183101561148a576117af60019161147c6117a98686611406565b516117b7565b92019161178d565b6117c66020825192015161180b565b6040519060208201927f85c9aec0e14ad33e63489c03355fa65515340a998cc26cd360d11267b451b6fd8452604083015260608201526060815261152d608082610266565b60ff8151169060208101519060ff6060604083015192015116906040519260208401947ff8939514938e0a800705081290e2e4c7efcf49061b28bf5b38f457c851eb82ac865260408501526060840152608083015260a082015260a0815261152d60c082610266565b73ffffffffffffffffffffffffffffffffffffffff8151169061189a6020820151611454565b90606060408201516020815191012091015160208151910120906040519260208401947f05b2ab8b8c7ceee9902f5288470f7189883657d476121976b1079d47722718a2865260408501526060840152608083015260a082015260a0815261152d60c082610266565b61191060408201826119ff565b80611921575b505061066690611dc8565b6040116117315780354211611726576119566116f16116f173ffffffffffffffffffffffffffffffffffffffff936020013590565b1661171b573880611916565b61197760208251818151910120920151611787565b6040519060208201927f7cae6e9d732b3307b20040708ed6876bf34aeb91eb6bcfbfd18581cb0376b60b8452604083015260608201526060815261152d608082610266565b60003560e01c63bc197c81811463f23a6e6182141763150b7a028214176119eb57633c10b94e6000526004601cfd5b6020526020603cf35b610314903690610668565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1813603018212156102f4570180359067ffffffffffffffff82116102f4576020019181360383136102f457565b919091357fffffffffffffffffffffffff0000000000000000000000000000000000000000811692600c8110611a84575050565b7fffffffffffffffffffffffff00000000000000000000000000000000000000009293508290600c0360031b1b161690565b60405190611ac5604083610266565b601682527f506c7567436f72653a6e6f6e63652d696e76616c6964000000000000000000006020830152565b60405190611b00604083610266565b601982527f506c7567436f72653a736f6c7665722d6d616c666f726d6564000000000000006020830152565b60405190611b3b604083610266565b601782527f506c7567436f72653a736f6c7665722d657870697265640000000000000000006020830152565b60405190611b76604083610266565b601782527f506c7567436f72653a736f6c7665722d696e76616c69640000000000000000006020830152565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1813603018212156102f4570180359067ffffffffffffffff82116102f457602001918160051b360383136102f457565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b908160011b9180830460021490151715611c3b57565b611bf6565b908160051b9180830460201490151715611c3b57565b90611c6082610289565b611c6d6040519182610266565b828152601f19611c7d8294610289565b019060005b828110611c8e57505050565b806060602080938501015201611c82565b919081101561141a5760051b810135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1813603018212156102f4570190565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1813603018212156102f4570180359067ffffffffffffffff82116102f4576020019160a08202360383136102f457565b919081101561141a5760a0020190565b3561031481610317565b9060018201809211611c3b57565b9060208201809211611c3b57565b91908201809211611c3b57565b60405190611d85604083610266565b601482527f506c7567436f72653a706c75672d6661696c65640000000000000000000000006020830152565b604090610314939281528160208201520190610545565b906020820190611dea611de5611dde8486611ba2565b9050611c25565b611c56565b906000935b611df98482611ba2565b9050851015611f6757611e0b85611c25565b91611e2c61091a611e2688611e208987611ba2565b90611c9f565b806119ff565b611e368486611406565b52611e418385611406565b5060005b611e60611e5688611e208987611ba2565b6020810190611cdf565b9050811015611eee5780611edc87611eca83611eaa611e568d611e20611ec28e611ebc611eb68f611eb060019f611eaa611ea18f611e208c91602097611ba2565b84810190611cdf565b90611d33565b01611d43565b60ff1690565b90611406565b51968c611ba2565b8a611ed5898b611406565b519261207d565b50611ee78688611406565b5201611e45565b50949091611f13611f19611f0b611f058488611406565b51612338565b929093611d4d565b86611406565b5215611f29576001019390611def565b611f31611d76565b90610a476040519283927fb921d87d00000000000000000000000000000000000000000000000000000000845260048401611db1565b5092505050565b638b78c6d819543303611f7d57565b6382b429006000526004601cfd5b73ffffffffffffffffffffffffffffffffffffffff1680638b78c6d819547f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3638b78c6d81955565b919091604051928051806040146120415760411461200257505050505b638baa579f6000526004601cfd5b602091606082015160001a835260408201516060525b60005201516040526020600160806000825afa519160006060526040523d610666575050611ff4565b506020917f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040830151601b8160ff1c01855216606052612018565b918093919260808201803561209181610317565b60009060ff166120d9575050916120b3816120d0936120d6966120c79661250e565b93905b6120c2859735846125cc565b612674565b92815191612646565b90612674565b91565b809291935050853591602083830101519082518210156122ff57602082840101908151956fffffffffffffffffffffffffffffffff87116122f6576121268761212186611d5b565b611d69565b8551106122ed579081600160ff61213e8a9695611d43565b16036121bc5750506121509051611c40565b116121b35790612177915b6121718561212161216b84611d5b565b93611d5b565b91612646565b936121858361212184611d5b565b8451106121ab5750916120c76121a56120d0936121216120d69796611d5b565b936120b6565b611f31612422565b85611f316124d3565b9092600260ff6121cb84611d43565b16036122835750505190811561227a57859181906121e885611d5b565b81831061220a575050501161220157906121779161215b565b85611f31612422565b9091929350602081870101519384158015612261575b612258578885116122585760019161224161224761224d9361224189611d5b565b90611d69565b96611d5b565b9201908793926121e8565b8a611f3161245d565b506fffffffffffffffffffffffffffffffff8511612220565b87611f316124d3565b91909250600360ff61229485611d43565b16036122b5576122a691925051611c40565b116121b357906121779161215b565b505060ff6122c4600492611d43565b1614806122e3575b6122da57906121779161215b565b85611f31612498565b50604084106122cc565b88611f3161245d565b88611f31612422565b86611f316123e7565b3d15612333573d90612319826102a1565b916123276040519384610266565b82523d6000602084013e565b606090565b9060009160ff6123496060926126e6565b94919390921660018103612377575050506000929350908291602082519201905af4612373612308565b9091565b8061239957505050600092935090829182602083519301915af1612373612308565b600281036123bd575050600093945090829160208594519301915af1612373612308565b6003919594939250146123ce575050565b6000935083929450602082519201905afa612373612308565b604051906123f6604083610266565b601782527f506c7567436f72653a696e76616c69642d6f66667365740000000000000000006020830152565b60405190612431604083610266565b601782527f506c7567436f72653a776f756c642d6f766572666c6f770000000000000000006020830152565b6040519061246c604083610266565b601782527f506c7567436f72653a696e76616c69642d6c656e6774680000000000000000006020830152565b604051906124a7604083610266565b601c82527f506c7567436f72653a6b65792d76616c75652d746f6f2d736d616c6c000000006020830152565b604051906124e2604083610266565b601d82527f506c7567436f72653a61727261792d6c656e6774682d696e76616c69640000006020830152565b91939290604085013592606086013593848101808211611c3b5782511061255d5790816121718661253e94611d69565b94359161254b8484611d69565b9051106121ab57509061031491611d69565b826040519061256d604083610266565b601682527f506c7567436f72653a6f75742d6f662d626f756e6473000000000000000000006020830152610a476040519283927fb921d87d00000000000000000000000000000000000000000000000000000000845260048401611db1565b919060009260609381518381111561263e575b8015612636575b508281106125f357505050565b6040519450918290039101601f19601f830181165b808301518187015201801561262057601f1990612608565b5050604081840160006020820152016040528252565b9050386125e6565b9250826125df565b80516060949392908381111561266c575b8181111561263657508281106125f357505050565b925082612657565b91909160405192815191601f198060208501165b80830151818801520180156126a057601f1990612688565b5050805190828501601f198060208501165b8084015181840152019182156126cc5791601f19906126b2565b505050604091018084019060006020830152845201604052565b80518101608082602083019203126102f45760208201519161270783610317565b6040810151916127168361063d565b60608201519160808101519067ffffffffffffffff82116102f457019080603f830112156102f45760208201519161274d836102a1565b9161275b6040519384610266565b838352604082850101116102f45773ffffffffffffffffffffffffffffffffffffffff92612790916040602085019101610522565b919216929356fea164736f6c634300081a000a";

    bytes32 internal constant PLUG_SOCKET_SALT =
        0x00000000000000000000000000000000000000006547747b6cf1fb0a2cedca19;

    address internal constant PLUG_SOCKET_ADDRESS =
        0x00000000a0C0e8b03FE11be22Fe8073202E75d64;

    bytes internal constant PLUG_INITCODE =
        hex"60808060405234603757600080546001600160a01b0319166f026df9927ae0fb3cfb5f4ce0298f6c45179055610f5f908161003d8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806306fdde03146100575780632293dd61146100525780633c7fe0cb1461004d576395d89b411461004857600080fd5b6102a6565b6101a1565b61011e565b346100b25760006003193601126100b2576100ae604080519061007a8183610334565b600482527f506c7567000000000000000000000000000000000000000000000000000000006020830152519182918261010a565b0390f35b600080fd5b60009103126100b257565b60005b8381106100d55750506000910152565b81810151838201526020016100c5565b90601f19601f602093610103815180928187528780880191016100c2565b0116010190565b90602061011b9281815201906100e5565b90565b60206003193601126100b25760043567ffffffffffffffff81116100b257604060031982360301126100b2576101797f6dc3c3a4e13e1e712e839686c373ae75e0388a5fe963d3bc521e0d84b1650050913390600401610a2e565b61019c60405192839260008452602084015260606040840152606083019061039e565b0390a1005b60206003193601126100b25760043567ffffffffffffffff81116100b257366023820112156100b257806004013567ffffffffffffffff81116100b2573660248260051b840101116100b2576101f56103be565b5060007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9d83360301905b8260ff821610156102a45760006024611fe08360051b168601013590838212156102a15750907f6dc3c3a4e13e1e712e839686c373ae75e0388a5fe963d3bc521e0d84b165005061027860ff9360243391890101610a2e565b6102886040519283928684610418565b0390a11660ff811461029c5760010161021f565b6103e9565b80fd5b005b346100b25760006003193601126100b2576100ae60408051906102c98183610334565b600482527f504c5547000000000000000000000000000000000000000000000000000000006020830152519182916020835260208301906100e5565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f601f19910116810190811067ffffffffffffffff82111761035757604052565b610305565b6040519061036b604083610334565b565b67ffffffffffffffff811161035757601f01601f191660200190565b60405190610398602083610334565b60008252565b906040602061011b9360ff815116845201519181602082015201906100e5565b604051906040820182811067ffffffffffffffff821117610357576040526060602083600081520152565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b61011b939260ff6060931682526020820152816040820152019061039e565b908160209103126100b2575190565b73ffffffffffffffffffffffffffffffffffffffff8116036100b257565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1823603018112156100b257016020813591019167ffffffffffffffff82116100b25781360383136100b257565b601f8260209493601f19938186528686013760008582860101520116010190565b60ff8116036100b257565b90602083828152019260208260051b82010193836000925b8484106105085750505050505090565b909192939495601f1982820301845286357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1843603018112156100b2578301906105636105558380610464565b6040845260408401916104b4565b9160208101357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1823603018112156100b25701906020823592019267ffffffffffffffff83116100b25760a08302360384136100b2578181036020928301528281520191906000905b8082106105ec5750505060208060019298019401940192949391906104f8565b90919260a0806001928635815260ff6020880135610609816104d5565b166020820152604087013560408201526060870135606082015260ff6080880135610633816104d5565b1660808201520194019201906105cc565b80357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81823603018112156100b2578101916040815273ffffffffffffffffffffffffffffffffffffffff833561069981610446565b16604082015260208301357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112156100b257830160208135910167ffffffffffffffff82116100b2578160051b360381136100b25761011b946107616107566107196107919461079c96608060608a015260c08901916104e0565b6107266040850185610464565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08984030160808a01526104b4565b916060810190610464565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08684030160a08701526104b4565b926020810190610464565b9160208185039101526104b4565b90602061011b928181520190610644565b6040513d6000823e3d90fd5b9073ffffffffffffffffffffffffffffffffffffffff6107f4602092959495604085526040850190610644565b9416910152565b60009060033d1161080857565b905060046000803e60005160e01c90565b600060443d1061011b576040516003193d016004823e8051913d602484011167ffffffffffffffff841117610888578282019283519167ffffffffffffffff8311610880576003193d85010160208487010111610880575061011b92910160200190610334565b949350505050565b92915050565b6000809160233d1161089c57565b9150506020600460003e600051600191565b3d156108d9573d906108bf8261036d565b916108cd6040519384610334565b82523d6000602084013e565b606090565b604051906108ed604083610334565b600f82527f506c75673a656d7074792d6461746100000000000000000000000000000000006020830152565b90602082519201517fffffffff0000000000000000000000000000000000000000000000000000000081169260048110610951575050565b7fffffffff00000000000000000000000000000000000000000000000000000000929350829060040360031b1b161690565b60405190610992604083610334565b601582527f506c75673a756e6b6e6f776e2d73656c6563746f7200000000000000000000006020830152565b91906040838203126100b25782516109d5816104d5565b9260208101519067ffffffffffffffff82116100b2570181601f820112156100b2578051610a028161036d565b92610a106040519485610334565b818452602082840101116100b25761011b91602080850191016100c2565b91610a376103be565b92610a5d610a4482610de5565b73ffffffffffffffffffffffffffffffffffffffff1690565b604051917f08f4152700000000000000000000000000000000000000000000000000000000835260208380610a9584600483016107aa565b0381855afa928315610d1b57600093610cea575b508294823b156100b257610af092600092836040518096819582947f3ea47844000000000000000000000000000000000000000000000000000000008452600484016107c7565b03925af19081610ccf575b50610cb8576001610b0a6107fb565b806308c379a014610c8c57634e487b7114610c30575b610b275750565b909250610b326108ae565b906004825110610c1857507fb921d87d000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000610b8883610919565b1603610bf9576040519080519060031982019081845260005b828110610be35750505090601c610bc792820101604052602080825183010191016109be565b610bdb610bd261035c565b60ff9093168352565b602082015291565b8060246020928401015182828801015201610ba1565b5090610c0361035c565b60fc8152610c0f610983565b60208201529190565b92915050610c2461035c565b60fb8152610c0f6108de565b610c3861088e565b90610c44575b50610b20565b945050610c64610c72600095604051928391602083019190602083019252565b03601f198101835282610334565b610c7a61035c565b60fd8152905b60208201529338610c3e565b50610c95610819565b80610ca05750610b20565b945050600093610cae61035c565b60fe815290610c80565b509150610cc361035c565b60ff8152610bdb610389565b80610cde6000610ce493610334565b806100b7565b38610afb565b610d0d91935060203d602011610d14575b610d058183610334565b810190610437565b9138610aa9565b503d610cfb565b6107bb565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81813603018212156100b2570190565b3561011b81610446565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1813603018212156100b2570180359067ffffffffffffffff82116100b2576020019181360383136100b257565b91908260409103126100b257815180151581036100b25760209092015161011b81610446565b91602061011b9381815201916104b4565b610df7610df28280610d20565b610d53565b90813b15610e1a575b5073ffffffffffffffffffffffffffffffffffffffff1690565b6040610e9091610e59610e4f610e48610a4460005473ffffffffffffffffffffffffffffffffffffffff1690565b9280610d20565b6060810190610d5d565b9190600084518096819582947e77436000000000000000000000000000000000000000000000000000000000845260048401610dd4565b03925af1908115610d1b57600091610f21575b5073ffffffffffffffffffffffffffffffffffffffff811673ffffffffffffffffffffffffffffffffffffffff83160315610e00577f5a4be8f40000000000000000000000000000000000000000000000000000000060005273ffffffffffffffffffffffffffffffffffffffff9182166004521660245260446000fd5b610f43915060403d604011610f4b575b610f3b8183610334565b810190610dae565b905038610ea3565b503d610f3156fea164736f6c634300081a000a";

    bytes32 internal constant PLUG_SALT =
        0x0000000000000000000000000000000000000000d6a30304690bd901a2b50107;

    address internal constant PLUG_ADDRESS =
        0x00000000Eb573fC340f1a4e84d487BD9F48069a8;

    /**
     * @notice Deploy (if needed) and return the PlugFactory contract instance.
     * @return $plugFactory The PlugFactory contract instance.
     */
    function plugFactory() internal returns (PlugFactory $plugFactory) {
        require(
            keccak256(abi.encodePacked(type(PlugFactory).creationCode))
                == keccak256(abi.encodePacked(PLUG_FACTORY_INITCODE)),
            "PlugEtcherLib:invalid-initcode"
        );

        if (_extcodesize(PLUG_FACTORY_ADDRESS) == 0) {
            address reality =
                safeCreate2(PLUG_FACTORY_SALT, PLUG_FACTORY_INITCODE);
            require(
                reality == PLUG_FACTORY_ADDRESS,
                "PlugEtcherLib:unexpected-address"
            );
        }

        $plugFactory = PlugFactory(payable(PLUG_FACTORY_ADDRESS));
    }

    /**
     * @notice Deploy (if needed) and return the PlugSocket contract instance.
     * @return $plugSocket The PlugSocket contract instance.
     */
    function plugSocket() internal returns (PlugSocket $plugSocket) {
        require(
            keccak256(abi.encodePacked(type(PlugSocket).creationCode))
                == keccak256(abi.encodePacked(PLUG_SOCKET_INITCODE)),
            "PlugEtcherLib:invalid-initcode"
        );

        if (_extcodesize(PLUG_SOCKET_ADDRESS) == 0) {
            address reality =
                safeCreate2(PLUG_SOCKET_SALT, PLUG_SOCKET_INITCODE);
            require(
                reality == PLUG_SOCKET_ADDRESS,
                "PlugEtcherLib:unexpected-address"
            );
        }

        $plugSocket = PlugSocket(payable(PLUG_SOCKET_ADDRESS));
    }

    /**
     * @notice Deploy (if needed) and return the Plug contract instance.
     * @return $plug The Plug contract instance.
     */
    function plug() internal returns (Plug $plug) {
        require(
            keccak256(abi.encodePacked(type(Plug).creationCode))
                == keccak256(abi.encodePacked(PLUG_INITCODE)),
            "PlugEtcherLib:invalid-initcode"
        );

        if (_extcodesize(PLUG_ADDRESS) == 0) {
            address reality = safeCreate2(PLUG_SALT, PLUG_INITCODE);
            require(reality == PLUG_ADDRESS, "PlugEtcherLib:unexpected-address");
        }

        $plug = Plug(payable(PLUG_ADDRESS));
    }

    /**
     * @notice Deploys a contract via 0age's immutable create 2 factory for testing.
     * @param $salt The salt to use for the deployment.
     * @param $initializationCode The initialization code for the contract.
     * @return $deployment The address of the deployed contract.
     */
    function safeCreate2(
        bytes32 $salt,
        bytes memory $initializationCode
    )
        public
        returns (address $deployment)
    {
        // Canonical address of 0age's immutable create 2 factory.
        address c2f = 0x0000000000FFe8B47B3e2130213B802212439497;
        if (_extcodesize(c2f) == 0) {
            bytes memory ic2fBytecode =
                hex"60806040526004361061003f5760003560e01c806308508b8f1461004457806364e030871461009857806385cf97ab14610138578063a49a7c90146101bc575b600080fd5b34801561005057600080fd5b506100846004803603602081101561006757600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166101ec565b604080519115158252519081900360200190f35b61010f600480360360408110156100ae57600080fd5b813591908101906040810160208201356401000000008111156100d057600080fd5b8201836020820111156100e257600080fd5b8035906020019184600183028401116401000000008311171561010457600080fd5b509092509050610217565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b34801561014457600080fd5b5061010f6004803603604081101561015b57600080fd5b8135919081019060408101602082013564010000000081111561017d57600080fd5b82018360208201111561018f57600080fd5b803590602001918460018302840111640100000000831117156101b157600080fd5b509092509050610592565b3480156101c857600080fd5b5061010f600480360360408110156101df57600080fd5b508035906020013561069e565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205460ff1690565b600083606081901c33148061024c57507fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008116155b6102a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260458152602001806107746045913960600191505060405180910390fd5b606084848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250604051855195965090943094508b93508692506020918201918291908401908083835b6020831061033557805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090920191602091820191016102f8565b51815160209384036101000a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018019909216911617905260408051929094018281037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00183528085528251928201929092207fff000000000000000000000000000000000000000000000000000000000000008383015260609890981b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602183015260358201969096526055808201979097528251808203909701875260750182525084519484019490942073ffffffffffffffffffffffffffffffffffffffff81166000908152938490529390922054929350505060ff16156104a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603f815260200180610735603f913960400191505060405180910390fd5b81602001825188818334f5955050508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461053a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260468152602001806107b96046913960600191505060405180910390fd5b50505073ffffffffffffffffffffffffffffffffffffffff8116600090815260208190526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790559392505050565b6000308484846040516020018083838082843760408051919093018181037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001825280845281516020928301207fff000000000000000000000000000000000000000000000000000000000000008383015260609990991b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000166021820152603581019790975260558088019890985282518088039098018852607590960182525085519585019590952073ffffffffffffffffffffffffffffffffffffffff81166000908152948590529490932054939450505060ff909116159050610697575060005b9392505050565b604080517fff000000000000000000000000000000000000000000000000000000000000006020808301919091523060601b6021830152603582018590526055808301859052835180840390910181526075909201835281519181019190912073ffffffffffffffffffffffffffffffffffffffff81166000908152918290529190205460ff161561072e575060005b9291505056fe496e76616c696420636f6e7472616374206372656174696f6e202d20636f6e74726163742068617320616c7265616479206265656e206465706c6f7965642e496e76616c69642073616c74202d206669727374203230206279746573206f66207468652073616c74206d757374206d617463682063616c6c696e6720616464726573732e4661696c656420746f206465706c6f7920636f6e7472616374207573696e672070726f76696465642073616c7420616e6420696e697469616c697a6174696f6e20636f64652ea265627a7a723058202bdc55310d97c4088f18acf04253db593f0914059f0c781a9df3624dcef0d1cf64736f6c634300050a0032";
            /// @solidity memory-safe-assembly
            assembly {
                let m := mload(0x40)
                mstore(m, 0xb4d6c782) // `etch(address,bytes)`.
                mstore(add(m, 0x20), c2f)
                mstore(add(m, 0x40), 0x40)
                let n := mload(ic2fBytecode)
                mstore(add(m, 0x60), n)
                for { let i := 0 } lt(i, n) { i := add(0x20, i) } {
                    mstore(
                        add(add(m, 0x80), i),
                        mload(add(add(ic2fBytecode, 0x20), i))
                    )
                }
                let vmAddress := 0x7109709ECfa91a80626fF3989D68f67F5b1DD12D
                if iszero(
                    call(
                        gas(),
                        vmAddress,
                        0,
                        add(m, 0x1c),
                        add(n, 0x64),
                        0x00,
                        0x00
                    )
                ) { revert(0, 0) }
            }
        }
        /// @solidity memory-safe-assembly
        assembly {
            let m := mload(0x40)
            let n := mload($initializationCode)
            mstore(m, 0x64e03087) // `safeCreate2(bytes32,bytes)`.
            mstore(add(m, 0x20), $salt)
            mstore(add(m, 0x40), 0x40)
            mstore(add(m, 0x60), n)
            // prettier-ignore
            for { let i := 0 } lt(i, n) { i := add(i, 0x20) } {
                mstore(
                    add(add(m, 0x80), i),
                    mload(add(add($initializationCode, 0x20), i))
                )
            }
            if iszero(call(gas(), c2f, 0, add(m, 0x1c), add(n, 0x64), m, 0x20))
            {
                returndatacopy(m, m, returndatasize())
                revert(m, returndatasize())
            }
            $deployment := mload(m)
        }
    }

    /**
     * @notice Determine and retrieve the extcodesize of `deployment`.
     * @param $deployment The address to check.
     * @return $result The size of the code at `deployment`.
     */
    function _extcodesize(address $deployment)
        private
        view
        returns (uint256 $result)
    {
        /// @solidity memory-safe-assembly
        assembly {
            $result := extcodesize($deployment)
        }
    }
}
