name: App - Build and Deploy

on:
  push:
    branches: ["**"]
    paths:
      - "packages/app/**"

  workflow_dispatch:

concurrency:
  cancel-in-progress: false
  group: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    name: üèóÔ∏è Build
    runs-on: ubuntu-latest
    steps:
      - name: üõí Checkout
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è  Setup Action
        uses: pnpm/action-setup@v4
        with:
          version: 9.14.4

      - name: üìö Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "pnpm"

      - name: ü´ô Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-

      - name: üì¶ Install dependencies
        run: pnpm install --filter=@terminallyonline/plug-app...

      - name: üî• Build Next (Not Deploying)
        if: github.ref != 'refs/heads/main'
        run: |
          cd packages/app
          echo "ENCRYPTION_KEY=github-action 
          DATABASE_URL=postgresql://postgres:postgres@localhost:5434/postgres 
          NEXTAUTH_URL=http://localhost:3000 
          NEXTAUTH_SECRET=github-action 
          OPENSEA_KEY=github-action 
          ZERION_KEY=github-action 
          NEXT_PUBLIC_EARLY_ACCESS=false 
          NEXT_PUBLIC_APP_URL=http://localhost:3000 
          NEXT_PUBLIC_WS_URL=ws://localhost:3001 
          NEXT_PUBLIC_WALLETCONNECT_ID=github-action 
          NEXT_PUBLIC_ALCHEMY_KEY=github-action 
          ADMIN_API_KEY=github-action" > .env
          pnpm build --filter=@terminallyonline/plug-app

      - name: üîÑ Install Vercel CLI
        if: github.ref == 'refs/heads/main'
        run: pnpm install --global vercel@latest

      - name: üîó Pull Vercel Environment Information
        if: github.ref == 'refs/heads/main'
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.APP_VERCEL_PROJECT_ID }}

      - name: üöÄ Deploy Project Artifacts to Vercel
        if: github.ref == 'refs/heads/main'
        run: vercel deploy --archive=tgz --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.APP_VERCEL_PROJECT_ID }}

      - name: ‚ò¢Ô∏è  Purge CloudFlare
        if: github.ref == 'refs/heads/main'
        run: |
          curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/purge_cache" \
          -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_API_TOKEN }}" \
          -H "Content-Type: application/json" \
          --data '{"purge_everything":true}'
