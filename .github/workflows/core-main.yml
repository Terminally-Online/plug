name: Core - Build

on:
  push:
    branches:
      - "**"
    paths:
      - "packages/core/**"

concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}

env:
  FOUNDRY_PROFILE: ci

defaults:
  run:
    working-directory: packages/core

jobs:
  build:
    name: 👁️ Build and Keep Artifacts
    runs-on: ubuntu-latest
    steps:
      - name: 🛒 Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: recursive

      - name: ⚙️  Setup Action
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
        with:
          version: 9.14.4

      - name: 📚 Setup Node
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version: 18
          cache: "pnpm"

      - name: 📂 Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # v 4.2.2
        name: 🫙 Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: ✨ Install Foundry
        uses: foundry-rs/foundry-toolchain@de808b1eea699e761c404bda44ba8f21aba30b2c # v1.3.1
        with:
          version: nightly

      - name: 📦 Install dependencies
        run: pnpm install --filter=@terminallyonline/plug-core...

      - name: 📦 Build package
        run: pnpm build

      - name: 🧹 Lint
        run: pnpm build:lint

      - name: 🧪 Run Forge Test
        run: |
          forge test
