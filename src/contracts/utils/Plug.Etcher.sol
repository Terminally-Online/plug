// SPDX-License-Identifier: MIT

pragma solidity 0.8.23;

import { PlugRouterSocket } from "../sockets/Plug.Router.Socket.sol";

/**
 * @title Plug Etcher
 * @notice This contract is the basis of the automatically generated Plug Etcher
 *         contract used to deploy and write the proper addresses. If you need to add
 *         a new etch into the vm stack for testing, you will do so through the file
 *         found at: /lib/functions/etcher.ts
 * @notice A good portion of this model comes from:
 *         https://github.com/Vectorized/multicaller/blob/main/src/MulticallerEtcher.sol
 *         I am not a Foundry expert. If there is a better way to do this, please let me
 *         know because this is a lot of work just to get a contract deployed when you're
 *         doing anything more than a simple in-and-out contract.
 * @author vectorized (twitter:@optimizoor)
 */
library PlugEtcher {
    bytes internal constant ROUTER_SOCKET_INITCODE =
        hex"6080604081815234620001e55763409feecd1980546003825580620001bd575b5090638b78c6d8198054620001af576001905560006001817f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a36200006684620001ea565b60108452602091828501906f141b1d59d49bdd5d195c94dbd8dad95d60821b82528051916200009583620001ea565b60058352640302e302e360dc1b85840190815282516001600160401b039891929190608081018a8111828210176200019b578552818152858882015246858201526060309101525190209251902090805191858301937f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f85528284015260608301524660808301523060a083015260a0825260c082019682881090881117620001875786905251902090558162000154575b61232383816200021d8239f35b60027fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d292556001815280a1388062000147565b634e487b7160e01b84526041600452602484fd5b634e487b7160e01b88526041600452602488fd5b630dc149f06000526004601cfd5b600181811c14303b1015620001d75760ff1b1b386200001f565b63f92ee8a96000526004601cfd5b600080fd5b604081019081106001600160401b038211176200020657604052565b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001e575b361561001c5761001c611bbc565b005b60003560e01c806306fdde031461023e57806319cac94214610239578063256929621461023457806329301c481461022f57806334bb37001461022a578063400571ba14610225578063450e94e91461022057806345df31421461021b578063484ac06114610216578063541a60491461021157806354d1f13d1461020c57806354fd4d50146102075780635b945999146102025780635d7bd850146101fd5780635f5ff29d146101f8578063715018a6146101f357806373eabec5146101ee578063757bc36a146101e95780638138d3c5146101e45780638175cccf146101df5780638da5cb5b146101da5780639760ca3b146101d5578063bab253b3146101d0578063c3dbb7ad146101cb578063c4d66de8146101c6578063cfd8e4f2146101c1578063dfe86ac5146101bc578063e55bd45b146101b7578063e8b1a9b2146101b2578063f04e283e146101ad578063f2fde38b146101a8578063f51e4d5d146101a3578063fee81cf41461019e5763ff38a1750361000e576112cf565b61129c565b611286565b61124a565b6111fa565b6111b2565b61119a565b61117c565b611072565b610ef7565b610e86565b610df9565b610d7e565b610d05565b610ccb565b610c91565b610c57565b610bd6565b610b6b565b610b31565b610b19565b610aef565b610aa9565b610a62565b610a4a565b610a32565b6109d5565b61099b565b610972565b6108bf565b6108a7565b610550565b61050e565b61029f565b60005b8381106102565750506000910152565b8181015183820152602001610246565b9060209161027f81518092818552858086019101610243565b601f01601f1916010190565b90602061029c928181520190610266565b90565b346102d35760003660031901126102d3576102cf6102bb6112e2565b604051918291602083526020830190610266565b0390f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b0382111761030957604052565b6102d8565b60a081019081106001600160401b0382111761030957604052565b604081019081106001600160401b0382111761030957604052565b608081019081106001600160401b0382111761030957604052565b90601f801991011681019081106001600160401b0382111761030957604052565b6001600160401b0381116103095760051b60200190565b600435906001600160a01b03821682036102d357565b35906001600160a01b03821682036102d357565b6001600160401b03811161030957601f01601f191660200190565b81601f820112156102d3578035906103f3826103c1565b92610401604051948561035f565b828452602083830101116102d357816000926020809301838601378301015290565b359081151582036102d357565b9190916060818403126102d3576040519061044a826102ee565b8193610455826103ad565b83526020820135906001600160401b0382116102d3578261047f6040949261048a948694016103dc565b602086015201610423565b910152565b81601f820112156102d3578035916020916104a984610380565b936104b7604051958661035f565b808552838086019160051b830101928084116102d357848301915b8483106104e25750505050505090565b82356001600160401b0381116102d357869161050384848094890101610430565b8152019201916104d2565b346102d35760203660031901126102d3576004356001600160401b0381116102d357610548610543602092369060040161048f565b611376565b604051908152f35b60008060031936011261059c5763389a75e1600c523381526202a30042016020600c2055337fdbf36a107da19e49527a7176a1babf963b4b0ff8cde35ee35d6cd8f1f9ac7e1d8280a280f35b80fd5b91906060838203126102d357604051906105b8826102ee565b81936105c3816103ad565b8352602081013560208401526040810135916001600160401b0383116102d35760409261048a92016103dc565b91909160a0818403126102d3576040519061060a8261030e565b8193610615826103ad565b8352602082013560208401526040820135906001600160401b0382116102d357826106496080949261048a9486940161048f565b60408601526060810135606086015201610423565b91906040838203126102d3576040519061067782610329565b81938035916001600160401b03928381116102d357816106989184016105f0565b845260208201359283116102d35760209261048a92016103dc565b81601f820112156102d3578035916020916106cd84610380565b936106db604051958661035f565b808552838086019160051b830101928084116102d357848301915b8483106107065750505050505090565b82356001600160401b0381116102d35786916107278484809489010161065e565b8152019201916106f6565b9190916060818403126102d3576040519061074c826102ee565b81938135906001600160401b03918281116102d3578161076d91850161059f565b845260208301359182116102d3578261047f6040949261048a948694016106b3565b81601f820112156102d3578035916020916107a984610380565b936107b7604051958661035f565b808552838086019160051b830101928084116102d357848301915b8483106107e25750505050505090565b82356001600160401b0381116102d357869161080384848094890101610732565b8152019201916107d2565b91908260409103126102d35760405161082681610329565b6020808294803584520135910152565b91906060838203126102d3576040519061084f82610329565b81938035916001600160401b0383116102d35760208261087583839661048a960161078f565b86520161080e565b60206003198201126102d357600435906001600160401b0382116102d35761029c91600401610836565b346102d35760206105486108ba3661087d565b6113bf565b346102d3576003196020368201126102d357600435906001600160401b03908183116102d35760809083360301126102d3576040516108fd81610344565b82600401358281116102d35761091990600436918601016103dc565b815260248301359182116102d35761095860646102cf9461094361096295600436918401016103dc565b602085015260448101356040850152016103ad565b606082015261140c565b6040519081529081906020820190565b346102d35760003660031901126102d3576002546040516001600160a01b039091168152602090f35b346102d35760203660031901126102d3576004356001600160401b0381116102d3576105486109d0602092369060040161059f565b61149a565b346102d35760403660031901126102d35760206105486040516109f781610329565b6004358152602435838201526114fe565b60206003198201126102d357600435906001600160401b0382116102d35761029c916004016105f0565b346102d3576020610548610a4536610a08565b611548565b346102d3576020610548610a5d36610a08565b611556565b60008060031936011261059c5763389a75e1600c52338152806020600c2055337ffa7b8eab7da67f412cc9575ed43464468f9bfbae89d1675917346ca6d8fe3c928280a280f35b346102d35760003660031901126102d3576102cf6102bb6115ea565b60206003198201126102d357600435906001600160401b0382116102d35761029c9160040161065e565b346102d3576020610b07610b0236610ac5565b61160b565b6040516001600160a01b039091168152f35b346102d3576020610548610b2c36610ac5565b611624565b346102d35760203660031901126102d3576004356001600160401b0381116102d357610548610b6660209236906004016106b3565b61167d565b60008060031936011261059c57610b80611c87565b638b78c6d8198181547f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3600160ff1b905580f35b906040602061029c938051151584520151918160208201520190610266565b346102d35760603660031901126102d3576001600160401b036024358181116102d357610c07903690600401610732565b6044359182116102d357610c326102cf91610c29610c49943690600401610430565b90600435611759565b604092919251938493604085526040850190610266565b908382036020850152610bb7565b346102d35760203660031901126102d3576004356001600160401b0381116102d357610548610c8c6020923690600401610732565b6117c6565b346102d35760203660031901126102d3576004356001600160401b0381116102d357610548610cc6602092369060040161078f565b61182d565b346102d35760203660031901126102d3576004356001600160401b0381116102d357610548610d006020923690600401610430565b611870565b346102d35760003660031901126102d357638b78c6d819546040516001600160a01b039091168152602090f35b9060206003198301126102d3576004356001600160401b03928382116102d357806023830112156102d35781600401359384116102d35760248460051b830101116102d3576024019190565b346102d357610d95610d8f36610d32565b906119c1565b60405160209160208201926020835281518094526040830193602060408260051b8601019301916000955b828710610dcd5785850386f35b909192938280610de9600193603f198a82030186528851610bb7565b9601920196019592919092610dc0565b346102d35760003660031901126102d3576001546040516001600160a01b039091168152602090f35b91906040838203126102d35760405190610e3b82610329565b81938035916001600160401b03928381116102d35781610698918401610836565b60206003198201126102d357600435906001600160401b0382116102d35761029c91600401610e22565b346102d3576020610e9636610e5c565b81610ea18251611b52565b91015182815191012060405190838201927f62f30595f4177d43243112a959ea1be53d5882871b1cc6917311b8d1fe83793c84526040830152606082015260608152610eec81610344565b519020604051908152f35b60203660031901126102d357610f0b610397565b63409feecd1980546003825580610fe8575b50638b78c6d819918254610fda576001600160a01b0316801560ff1b8117909255600091827f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a380610f9f610f726112e2565b610f7a6115ea565b60405191610f8783610344565b8252602082015246604082015230606082015261140c565b8355610fa9575080f35b6002905560016020527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602080a180f35b630dc149f06000526004601cfd5b600181811c14303b10156110005760ff1b1b38610f1d565b63f92ee8a96000526004601cfd5b6020808201906020835283518092526040830192602060408460051b8301019501936000915b8483106110445750505050505090565b9091929394958480611062600193603f198682030187528a51610266565b9801930193019194939290611034565b602060031981813601126102d357600435906001600160401b0382116102d3576040908260040192360301126102d3576110b46110af3683610e22565b611bac565b916110ca36826110c48580611970565b0161080e565b80519060018060a01b038516600052600383528260406000209101516000528252604060002090815460001981146111775760010180925503611133576102cf6111278461112161111b8680611970565b80611b1d565b90611ea8565b6040519182918261100e565b6064906040519062461bcd60e51b82526004820152601c60248201527f506c7567436f72653a6e6f6e6365322d6f75742d6f662d6f72646572000000006044820152fd5b611949565b346102d35760003660031901126102d3576020600054604051908152f35b346102d35760206105486111ad3661087d565b611b52565b346102d35760403660031901126102d3576001600160a01b036111d3610397565b16600052600360205260406000206024356000526020526020604060002054604051908152f35b60203660031901126102d35761120e610397565b611216611c87565b63389a75e1600c52806000526020600c20908154421161123c57600061001c9255611ca4565b636f5e88186000526004601cfd5b60203660031901126102d35761125e610397565b611266611c87565b8060601b156112785761001c90611ca4565b637448fbae6000526004601cfd5b6102cf61112761129536610d32565b3391611ea8565b346102d35760203660031901126102d3576112b5610397565b63389a75e1600c52600052602080600c2054604051908152f35b346102d3576020610b076110af36610e5c565b604051906112ef82610329565b601082526f141b1d59d49bdd5d195c94dbd8dad95d60821b6020830152565b634e487b7160e01b600052603260045260246000fd5b80518210156113385760209160051b010190565b61130e565b6040611374919392938151948161135e879351809260208087019101610243565b820190602082015203602081018552018361035f565b565b6060906000908051905b818310611394575050506020815191012090565b9091926113b66001916113b06113aa8786611324565b51611870565b9061133d565b93019190611380565b6113f86114066113d160005493611b52565b604051928391602083019586909160429261190160f01b8352600283015260228201520190565b03601f19810183528261035f565b51902090565b8051602081519101209060208101516020815191012090604081015190606060018060a01b0391015116906040519260208401947f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f865260408501526060840152608083015260a082015260a0815260c081018181106001600160401b038211176103095760405251902090565b60018060a01b038151169060406020820151910151602081519101206040519160208301937fba015bd32610c44647c4bcbb8c645ee60d5957ae5e7aa37e56c897d9295af65a8552604084015260608301526080820152608081526114068161030e565b602081519101516040519060208201927f276c12ec467e6d60d25741105b112102c28092173b15ca9db916c654ad913d7c8452604083015260608201526060815261140681610344565b6113f86114066113d1600054935b60018060a01b03815116906020810151906115746040820151611376565b90608060608201519101511515916040519360208501957febe783112b2088c6a788530144d3c69021fe5d4d46f650940d6bfaf88b54e3f7875260408601526060850152608084015260a083015260c082015260c0815260e081018181106001600160401b038211176103095760405251902090565b604051906115f782610329565b60058252640302e302e360dc1b6020830152565b61029c90602061161b8251611548565b91015190611be9565b60206116308251611556565b910151602081519101206040519060208201927ffbb5bac87a66a98421e535854c88c14ea8206480ff93a62baef88eb3796974558452604083015260608201526060815261140681610344565b6060906000908051905b81831061169b575050506020815191012090565b9091926116b76001916113b06116b18786611324565b51611624565b93019190611687565b604051906116cd82610329565b6060602083600081520152565b93929161172490606060406116f68195838a52838a0190610266565b9288840360208a015260018060a01b0381511684526020810151602085015201519181858201520190610266565b930152565b3d15611754573d9061173a826103c1565b91611748604051938461035f565b82523d6000602084013e565b606090565b916000929183926117686116c0565b5061179e602060018060a01b0385511694015192516113f860405193849260208401966308d7667160e11b8852602485016116da565b51915afa906117ab611729565b91604051906117b982610329565b1515815282602082015290565b6117d0815161149a565b9060406117e0602083015161167d565b91015115156040519160208301937fd88a558de6e76ae3b06e4691e5c7eb27632ad144c564c3c807b9b011d3207c898552604084015260608301526080820152608081526114068161030e565b6060906000908051905b81831061184b575050506020815191012090565b9091926118676001916113b06118618786611324565b516117c6565b93019190611837565b60018060a01b0381511690604060208201516020815191012091015115156040519160208301937f11d2e7ce7b01636231a80046eb2467257c3ea77c5a408e6ddd3d0899cfbc73798552604084015260608301526080820152608081526114068161030e565b604051602081018181106001600160401b03821117610309576040526000815290565b9061190382610380565b611910604051918261035f565b8281528092611921601f1991610380565b019060005b82811061193257505050565b60209061193d6116c0565b82828501015201611926565b634e487b7160e01b600052601160045260246000fd5b60ff1660ff81146111775760010190565b903590605e19813603018212156102d3570190565b908210156113385761029c9160051b810190611970565b61029c903690610732565b8015611177576000190190565b9190820391821161117757565b909160609280918115611b1057916119da8294926118f9565b916000905b60ff821686811015611b07576119f96119fe918884611985565b61199c565b9460208601515115611af95795916000915b60208701519788519860ff8516998a1015611adf57611a318a604092611324565b5151019889515115611ad0576116b1611a4e9160208b0151611324565b9460005b8b8b51805160ff84161015611ab4578a6040611aa885948f94611a8b8e87611a84611aa29460ff611aaf9d1690611324565b5191611759565b949096510194519e611a9c816119a7565b9f6119b4565b90611324565b525261195f565b611a52565b505050985091935091611ac69061195f565b9196929096611a10565b509193975091611ac69061195f565b509496509650611aef915061195f565b90949391936119df565b9294509490611aef9061195f565b50505050509050565b935050505061029c6118d6565b903590601e19813603018212156102d357018035906001600160401b0382116102d357602001918160051b360383136102d357565b611b696020611b61835161182d565b9201516114fe565b6040519060208201927f47c7cdc8df0e6a9774c8b8955db068ee1707012a385dae083e0190f51ab2f4e58452604083015260608201526060815261140681610344565b61029c90602061161b82516113bf565b60003560e01c63bc197c81811463f23a6e6182141763150b7a02821417611be05750565b6020526020603cf35b91909160206001608060008294839060408099815198611c27575b5050505afa51923d15611c1957600060605252565b638baa579f6000526004601cfd5b849283528780820151835282825114611c67576041825114611c50575050509050388881611c04565b60609384830151901a905201519052388881611c04565b9250015190601b8260ff1c019052848060ff1b0316606052388881611c04565b638b78c6d819543303611c9657565b6382b429006000526004601cfd5b638b78c6d819805490916001600160a01b03169081907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3801560ff1b179055565b90611cf382610380565b611d00604051918261035f565b8281528092611d11601f1991610380565b019060005b828110611d2257505050565b806060602080938501015201611d16565b60405190611d40826102ee565b60006040838151611d50816102ee565b8381528360208201526060838201528152606060208201520152565b60405190611d798261030e565b6000608083828152826020820152606060408201528260608201520152565b60405190611da582610329565b6060602083611db2611d6c565b81520152565b15611dbf57565b60405162461bcd60e51b815260206004820152601b60248201527f506c7567436f72653a696e76616c69642d70696e2d7369676e657200000000006044820152606490fd5b15611e0b57565b60405162461bcd60e51b815260206004820152602360248201527f506c7567436f72653a696e76616c69642d617574686f726974792d70696e2d6c604482015262696e6b60e81b6064820152608490fd5b15611e6357565b60405162461bcd60e51b815260206004820152601760248201527f506c7567436f72653a696e76616c69642d73656e6465720000000000000000006044820152606490fd5b92919092611eb584611ce9565b936000611ec0611d33565b50611ec9611d98565b50611ed2611d6c565b505b818110611ee15750505050565b611eef6119f9828486611985565b600060208083019182515115600014611fb3575050600280546001600160a01b0319166001600160a01b0388161790555060019190611f7790600180546001600160a01b0319166001600160a01b0389161790555b8354611f64906001600160a01b0316858060a01b03808a16911614611e5c565b516002546001600160a01b0316906121a8565b611f818289611324565b52611f8c8188611324565b50600180546001600160a01b0319169055600280546001600160a01b031916905501611ed4565b90969481999396999892985b895180518210156120af5781611fd491611324565b5161201d611fe18261160b565b918315612074575b60018054909361200d916001600160a01b03166001600160a01b0390911614611db8565b610b2c8151968d88015114611e04565b9360409081016000835b612038575b50505050600101611fbf565b8b878351805184101561206c57918561206185936120588a978897611324565b518451906120c5565b915101520190612027565b50505061202c565b600280546001600160a01b0319166001600160a01b038516179055600180546001600160a01b0319166001600160a01b038516179055611fe9565b5050949650509550959290611f77600192611f44565b9160018060a01b03835116916020916120fc83860151926113f8604051938492878401966308d7667160e11b8852602485016116da565b600093849283809351925af192612111611729565b9315908161219a575b50612194578251830192818181860195031261218c5781810151906001600160401b03821161219057019083603f8301121561218c57808201519261215e846103c1565b9461216c604051968761035f565b8486526040858501011161059c575090604061029c939285019101610243565b8280fd5b8380fd5b82612261565b60409150015115153861211a565b6000919082916040820151906121fc6034604051809360206121d38184019788815193849201610243565b8201906bffffffffffffffffffffffff199060601b16602082015203601481018452018261035f565b82516001600160a01b031660205a940151915193f19061221a611729565b911561222257565b50612261565b6040519061223582610329565b601b82527f506c7567436f72653a7461726765742d70616e69636b65642d307800000000006020830152565b60048151106122df576020810180519091906001600160e01b031916634e487b7160e01b1461228e575190fd5b6122db90602461229c612228565b91015160208201908151906030600f81818416019260041c160160081b179061ffff191617905260405191829162461bcd60e51b83526004830161028b565b0390fd5b60405162461bcd60e51b815260206004820152600f60248201526e141b1d59d0dbdc994e9c995d995c9d608a1b6044820152606490fdfea164736f6c6343000817000a";

    bytes32 internal constant ROUTER_SOCKET_SALT =
        0x00000000000000000000000000000000000000006a05572d70e0ed3f5e2cd39b;

    address internal constant ROUTER_SOCKET_ADDRESS =
        0x00004a1b524F1fbF349174df19Ab8A991aC76aD9;

    /**
     * @notice Deploy (if needed) and return the PlugRouterSocket contract instance.
     * @return $routerSocket The PlugRouterSocket contract instance.
     */
    function routerSocket() internal returns (PlugRouterSocket $routerSocket) {
        if (_extcodesize(ROUTER_SOCKET_ADDRESS) == 0) {
            address reality =
                _safeCreate2(ROUTER_SOCKET_SALT, ROUTER_SOCKET_INITCODE);
            require(
                reality == ROUTER_SOCKET_ADDRESS, "Etcher: Reality check failed"
            );
        }
        $routerSocket = PlugRouterSocket(payable(ROUTER_SOCKET_ADDRESS));
    }

    /**
     * @notice Deploys a contract via 0age's immutable create 2 factory for testing.
     * @param $salt The salt to use for the deployment.
     * @param $initializationCode The initialization code for the contract.
     * @return $deployment The address of the deployed contract.
     */
    function _safeCreate2(
        bytes32 $salt,
        bytes memory $initializationCode
    )
        private
        returns (address $deployment)
    {
        // Canonical address of 0age's immutable create 2 factory.
        address c2f = 0x0000000000FFe8B47B3e2130213B802212439497;
        if (_extcodesize(c2f) == 0) {
            bytes memory ic2fBytecode =
                hex"60806040526004361061003f5760003560e01c806308508b8f1461004457806364e030871461009857806385cf97ab14610138578063a49a7c90146101bc575b600080fd5b34801561005057600080fd5b506100846004803603602081101561006757600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166101ec565b604080519115158252519081900360200190f35b61010f600480360360408110156100ae57600080fd5b813591908101906040810160208201356401000000008111156100d057600080fd5b8201836020820111156100e257600080fd5b8035906020019184600183028401116401000000008311171561010457600080fd5b509092509050610217565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b34801561014457600080fd5b5061010f6004803603604081101561015b57600080fd5b8135919081019060408101602082013564010000000081111561017d57600080fd5b82018360208201111561018f57600080fd5b803590602001918460018302840111640100000000831117156101b157600080fd5b509092509050610592565b3480156101c857600080fd5b5061010f600480360360408110156101df57600080fd5b508035906020013561069e565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205460ff1690565b600083606081901c33148061024c57507fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008116155b6102a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260458152602001806107746045913960600191505060405180910390fd5b606084848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250604051855195965090943094508b93508692506020918201918291908401908083835b6020831061033557805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090920191602091820191016102f8565b51815160209384036101000a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018019909216911617905260408051929094018281037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00183528085528251928201929092207fff000000000000000000000000000000000000000000000000000000000000008383015260609890981b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602183015260358201969096526055808201979097528251808203909701875260750182525084519484019490942073ffffffffffffffffffffffffffffffffffffffff81166000908152938490529390922054929350505060ff16156104a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603f815260200180610735603f913960400191505060405180910390fd5b81602001825188818334f5955050508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461053a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260468152602001806107b96046913960600191505060405180910390fd5b50505073ffffffffffffffffffffffffffffffffffffffff8116600090815260208190526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790559392505050565b6000308484846040516020018083838082843760408051919093018181037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001825280845281516020928301207fff000000000000000000000000000000000000000000000000000000000000008383015260609990991b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000166021820152603581019790975260558088019890985282518088039098018852607590960182525085519585019590952073ffffffffffffffffffffffffffffffffffffffff81166000908152948590529490932054939450505060ff909116159050610697575060005b9392505050565b604080517fff000000000000000000000000000000000000000000000000000000000000006020808301919091523060601b6021830152603582018590526055808301859052835180840390910181526075909201835281519181019190912073ffffffffffffffffffffffffffffffffffffffff81166000908152918290529190205460ff161561072e575060005b9291505056fe496e76616c696420636f6e7472616374206372656174696f6e202d20636f6e74726163742068617320616c7265616479206265656e206465706c6f7965642e496e76616c69642073616c74202d206669727374203230206279746573206f66207468652073616c74206d757374206d617463682063616c6c696e6720616464726573732e4661696c656420746f206465706c6f7920636f6e7472616374207573696e672070726f76696465642073616c7420616e6420696e697469616c697a6174696f6e20636f64652ea265627a7a723058202bdc55310d97c4088f18acf04253db593f0914059f0c781a9df3624dcef0d1cf64736f6c634300050a0032";
            /// @solidity memory-safe-assembly
            assembly {
                let m := mload(0x40)
                mstore(m, 0xb4d6c782) // `etch(address,bytes)`.
                mstore(add(m, 0x20), c2f)
                mstore(add(m, 0x40), 0x40)
                let n := mload(ic2fBytecode)
                mstore(add(m, 0x60), n)
                for { let i := 0 } lt(i, n) { i := add(0x20, i) } {
                    mstore(
                        add(add(m, 0x80), i),
                        mload(add(add(ic2fBytecode, 0x20), i))
                    )
                }
                let vmAddress := 0x7109709ECfa91a80626fF3989D68f67F5b1DD12D
                if iszero(
                    call(
                        gas(),
                        vmAddress,
                        0,
                        add(m, 0x1c),
                        add(n, 0x64),
                        0x00,
                        0x00
                    )
                ) { revert(0, 0) }
            }
        }
        /// @solidity memory-safe-assembly
        assembly {
            let m := mload(0x40)
            let n := mload($initializationCode)
            mstore(m, 0x64e03087) // `safeCreate2(bytes32,bytes)`.
            mstore(add(m, 0x20), $salt)
            mstore(add(m, 0x40), 0x40)
            mstore(add(m, 0x60), n)
            // prettier-ignore
            for { let i := 0 } lt(i, n) { i := add(i, 0x20) } {
                mstore(
                    add(add(m, 0x80), i),
                    mload(add(add($initializationCode, 0x20), i))
                )
            }
            if iszero(call(gas(), c2f, 0, add(m, 0x1c), add(n, 0x64), m, 0x20))
            {
                returndatacopy(m, m, returndatasize())
                revert(m, returndatasize())
            }
            $deployment := mload(m)
        }
    }

    /**
     * @notice Determine and retrieve the extcodesize of `deployment`.
     * @param $deployment The address to check.
     * @return $result The size of the code at `deployment`.
     */
    function _extcodesize(address $deployment)
        private
        view
        returns (uint256 $result)
    {
        /// @solidity memory-safe-assembly
        assembly {
            $result := extcodesize($deployment)
        }
    }
}
