// SPDX-License-Identifier: MIT

pragma solidity 0.8.23;

import { ImmutableCreate2Factory } from
    "../interfaces/Deployment.Create2Factory.Interface.sol";
import { PlugLib } from "../libraries/Plug.Lib.sol";
import { PlugBaseFeeFuse } from "../fuses/Plug.BaseFee.Fuse.sol";
import { PlugBlockNumberFuse } from "../fuses/Plug.BlockNumber.Fuse.sol";
import { PlugClampFuse } from "../fuses/Plug.Clamp.Fuse.sol";
import { PlugFactory } from "../base/Plug.Factory.sol";
import { PlugLimitedCallsFuse } from "../fuses/Plug.LimitedCalls.Fuse.sol";
import { PlugNounsIdFuse } from "../fuses/Plug.NounsId.Fuse.sol";
import { PlugNounsTraitFuse } from "../fuses/Plug.NounsTrait.Fuse.sol";
import { PlugRevocationFuse } from "../fuses/Plug.Revocation.Fuse.sol";
import { PlugTimestampFuse } from "../fuses/Plug.Timestamp.Fuse.sol";
import { PlugWindowFuse } from "../fuses/Plug.Window.Fuse.sol";
import { Plug } from "../base/Plug.sol";

/**
 * @title Plug Etcher
 * @notice This contract is the basis of the automatically generated Plug Etcher
 *         contract used to deploy and write the proper addresses. If you need to add
 *         a new etch into the vm stack for testing, you will do so through the file
 *         found at: /lib/functions/etcher.ts
 * @notice A good portion of this model comes from:
 *         https://github.com/Vectorized/multicaller/blob/main/src/MulticallerEtcher.sol
 *         I am not a Foundry expert. If there is a better way to do this, please let me
 *         know because this is a lot of work just to get a contract deployed when you're
 *         doing anything more than a simple in-and-out contract.
 * @author vectorized (twitter:@optimizoor)
 */
library PlugEtcherLib {
    /// @notice The immutable Create2 factory used for deployment.
    ImmutableCreate2Factory internal constant FACTORY =
        ImmutableCreate2Factory(0x0000000000FFe8B47B3e2130213B802212439497);

    bytes internal constant PLUG_BASE_FEE_FUSE_INITCODE =
        hex"6080806040523461001657610619908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c90816311aecce21461004a575080631323692a146100455763e5c5e9a31461004057600080fd5b610223565b610181565b346100d6577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc906060823601126100d65767ffffffffffffffff6004358181116100dd5761009c9036906004016100e1565b9290936024359283116100d95760609083360301126100d6576100d26100c66004840185876103fc565b60405191829182610137565b0390f35b80fd5b5080fd5b8280fd5b9181601f8401121561010f5782359167ffffffffffffffff831161010f576020838186019501011161010f57565b600080fd5b60005b8381106101275750506000910152565b8181015183820152602001610117565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f6040936020845261017a8151809281602088015260208888019101610114565b0116010190565b3461010f5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261010f576004356fffffffffffffffffffffffffffffffff808216820361010f57602435908116810361010f576100d291604051917fffffffffffffffffffffffffffffffff00000000000000000000000000000000809260801b16602084015260801b166030820152602081526100c6816102e4565b3461010f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261010f5760043567ffffffffffffffff811161010f5761027d61027760409236906004016100e1565b9061053d565b82516fffffffffffffffffffffffffffffffff928316815291166020820152f35b906102b160209282815194859201610114565b0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761030057604052565b6102b5565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761030057604052565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561010f570180359067ffffffffffffffff821161010f5760200191813603831361010f57565b92919267ffffffffffffffff821161030057604051916103df60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160184610305565b82948184528183011161010f578281602093846000960137010152565b906104069161053d565b6fffffffffffffffffffffffffffffffff90811691166104f15748116104425761043861043f915b6040810190610346565b3691610397565b90565b6104ed6104666104bb6104536105d3565b61048f604051938492602084019061029e565b7f3a65787069726564000000000000000000000000000000000000000000000000815260080190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282610305565b6040519182917f08c379a000000000000000000000000000000000000000000000000000000000835260048301610137565b0390fd5b48106105035761043861043f9161042e565b6104ed6105146104bb6104536105d3565b7f3a6561726c790000000000000000000000000000000000000000000000000000815260060190565b91909161054b368483610397565b906010825110610575576010610565920151933691610397565b6020815110610575576020015190565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f746f55696e743132385f6f75744f66426f756e647300000000000000000000006044820152fd5b604051906105e0826102e4565b600f82527f506c756742617365466565467573650000000000000000000000000000000000602083015256fea164736f6c6343000817000a";

    bytes32 internal constant PLUG_BASE_FEE_FUSE_SALT =
        0x000000000000000000000000000000000000000039feffbbecf1ff3f71cf5154;

    address internal constant PLUG_BASE_FEE_FUSE_ADDRESS =
        0x004B3DCEd1705b02468db997C929928d0099F90B;

    bytes internal constant PLUG_BLOCK_NUMBER_FUSE_INITCODE =
        hex"6080806040523461001657610619908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c90816311aecce21461004a575080631323692a146100455763e5c5e9a31461004057600080fd5b610223565b610181565b346100d6577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc906060823601126100d65767ffffffffffffffff6004358181116100dd5761009c9036906004016100e1565b9290936024359283116100d95760609083360301126100d6576100d26100c66004840185876103fc565b60405191829182610137565b0390f35b80fd5b5080fd5b8280fd5b9181601f8401121561010f5782359167ffffffffffffffff831161010f576020838186019501011161010f57565b600080fd5b60005b8381106101275750506000910152565b8181015183820152602001610117565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f6040936020845261017a8151809281602088015260208888019101610114565b0116010190565b3461010f5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261010f576004356fffffffffffffffffffffffffffffffff808216820361010f57602435908116810361010f576100d291604051917fffffffffffffffffffffffffffffffff00000000000000000000000000000000809260801b16602084015260801b166030820152602081526100c6816102e4565b3461010f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261010f5760043567ffffffffffffffff811161010f5761027d61027760409236906004016100e1565b9061053d565b82516fffffffffffffffffffffffffffffffff928316815291166020820152f35b906102b160209282815194859201610114565b0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761030057604052565b6102b5565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761030057604052565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561010f570180359067ffffffffffffffff821161010f5760200191813603831361010f57565b92919267ffffffffffffffff821161030057604051916103df60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160184610305565b82948184528183011161010f578281602093846000960137010152565b906104069161053d565b6fffffffffffffffffffffffffffffffff90811691166104f15743116104425761043861043f915b6040810190610346565b3691610397565b90565b6104ed6104666104bb6104536105d3565b61048f604051938492602084019061029e565b7f3a65787069726564000000000000000000000000000000000000000000000000815260080190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282610305565b6040519182917f08c379a000000000000000000000000000000000000000000000000000000000835260048301610137565b0390fd5b43106105035761043861043f9161042e565b6104ed6105146104bb6104536105d3565b7f3a6561726c790000000000000000000000000000000000000000000000000000815260060190565b91909161054b368483610397565b906010825110610575576010610565920151933691610397565b6020815110610575576020015190565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f746f55696e743132385f6f75744f66426f756e647300000000000000000000006044820152fd5b604051906105e0826102e4565b601382527f506c7567426c6f636b4e756d6265724675736500000000000000000000000000602083015256fea164736f6c6343000817000a";

    bytes32 internal constant PLUG_BLOCK_NUMBER_FUSE_SALT =
        0x000000000000000000000000000000000000000086ab490731ffff3f814b2589;

    address internal constant PLUG_BLOCK_NUMBER_FUSE_ADDRESS =
        0x003375879C6e963ac682D7C3b43E4aba32Bd786a;

    bytes internal constant PLUG_CLAMP_FUSE_INITCODE =
        hex"60808060405234610016576104a3908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c90816311aecce21461004a57508063dc0aa2af146100455763e5c5e9a31461004057600080fd5b61020e565b610190565b346100d6577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc906060823601126100d65767ffffffffffffffff6004358181116100dd5761009c9036906004016100e1565b9290936024359283116100d95760609083360301126100d6576100d26100c66004840185876103a5565b60405191829182610114565b0390f35b80fd5b5080fd5b8280fd5b9181601f8401121561010f5782359167ffffffffffffffff831161010f576020838186019501011161010f57565b600080fd5b60208082528251818301819052939260005b858110610166575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006040809697860101520116010190565b818101830151848201604001528201610126565b919082604091031261010f576020823592013590565b3461010f5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261010f57604080516004356020820152602435918101919091526100d2906100c681606081015b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081018352826102fa565b3461010f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261010f5760043567ffffffffffffffff811161010f576102606102689136906004016100e1565b81019061017a565b60408051928352602083019190915290f35b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561010f570180359067ffffffffffffffff821161010f5760200191813603831361010f57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761033b57604052565b6102cb565b92919267ffffffffffffffff821161033b576040519161038860207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601846102fa565b82948184528183011161010f578281602093846000960137010152565b6103b19181019061017a565b919060408201926103cc6103c5858561027a565b3691610340565b6020815110610438576020015190808211610417575081116103f957506103f6916103c59161027a565b90565b6101e292506103f69150604051928391602083019190602083019252565b9150506101e292506103f69150604051928391602083019190602083019252565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f746f55696e743235365f6f75744f66426f756e647300000000000000000000006044820152fdfea164736f6c6343000817000a";

    bytes32 internal constant PLUG_CLAMP_FUSE_SALT =
        0x000000000000000000000000000000000000000013674b6bcdfaff3fa79a01a7;

    address internal constant PLUG_CLAMP_FUSE_ADDRESS =
        0x00A312542d2D8C9D7d03C3F3723cf8fd0B246162;

    bytes internal constant PLUG_FACTORY_INITCODE =
        hex"608080604052346100165761038a908161001c8239f35b600080fdfe60406080815260048036101561001457600080fd5b6000803560e01c806375fd9f281461030f5780637ac4ed64146102255763b03110791461004057600080fd5b60607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261022257610072610355565b916024359273ffffffffffffffffffffffffffffffffffffffff928385169182860361021e57604435918260601c80851490151715610211578088517fcc3735a920a3ca505d382bbc545af43d6000803e6038573d6000fd5b3d6000f36060527f5155f3363d3d373d3d363d7f360894a13ba1a3210667c828492db98dca3e20768a5261600960205283601e5268603d3d8160223d3973600a52605f96602192605f60212060358401523060581b835260ff835386601584015260558320983415948a3b156101ef575050506001926101e95783388180348c5af1156101de57505b895281606052159687610175575b5050505050835192158352166020820152f35b6014526fc4d66de8000000000000000000000000815280386024601083895af1156101d257506020857f32c7564be3bbeabe66360c08d019367b0d744fcb948046d92552c00c9743dd109289519485521692a33880808080610162565b87903d9082513e3d9051fd5b63b12d13eb8452601cfd5b50610154565b909194508792995034f59687156102065750610154565b63301164258452601cfd5b630c4549ef90526004601cfd5b5080fd5b80fd5b50823461021e57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261021e579073ffffffffffffffffffffffffffffffffffffffff6020926102ec610279610355565b90604051917fcc3735a920a3ca505d382bbc545af43d6000803e6038573d6000fd5b3d6000f36060527f5155f3363d3d373d3d363d7f360894a13ba1a3210667c828492db98dca3e2076604052616009602052601e5268603d3d8160223d3973600a52605f602120916040526000606052565b60ff84536035523060601b60015260243560155260558320926035525191168152f35b50823461021e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261021e5760209061034e610279610355565b9051908152f35b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361037857565b600080fdfea164736f6c6343000817000a";

    bytes32 internal constant PLUG_FACTORY_SALT =
        0x0000000000000000000000000000000000000000269458ea2ffdff3f28114bc4;

    address internal constant PLUG_FACTORY_ADDRESS =
        0x00BA06e88e48Ed0b68D784b1C3A817e9F589F685;

    bytes internal constant PLUG_LIMITED_CALLS_FUSE_INITCODE =
        hex"6080806040523461001657610514908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c90816311aecce21461004a57508063deb21fa2146100455763e5c5e9a31461004057600080fd5b610209565b610179565b346100d9577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6060813601126100dc5767ffffffffffffffff916004358381116100dc5761009c9036906004016100e0565b9190926024359485116100dc5760609085360301126100d9576100d56100c960443560048701858761038b565b60405191829182610113565b0390f35b80fd5b5080fd5b9181601f8401121561010e5782359167ffffffffffffffff831161010e576020838186019501011161010e57565b600080fd5b60208082528251818301819052939260005b858110610165575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006040809697860101520116010190565b818101830151848201604001528201610125565b3461010e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261010e57604051600435602082015260208152604081019080821067ffffffffffffffff831117610204577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc090826040526101ff8184610113565b030190f35b6102eb565b3461010e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261010e5760043567ffffffffffffffff811161010e5761026361025d60209236906004016100e0565b9061048e565b604051908152f35b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561010e570180359067ffffffffffffffff821161010e5760200191813603831361010e57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b92919267ffffffffffffffff918281116102045760405192601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168401908111848210176102045760405282948184528183011161010e578281602093846000960137010152565b906103989193929361048e565b903360005260006020526040600020906000526020526040600020908154917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8314610489576001830190551115610405576103fb81604061040293019061029a565b369161031a565b90565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f506c75674c696d6974656443616c6c73467573653a6c696d69742d657863656560448201527f64656400000000000000000000000000000000000000000000000000000000006064820152fd5b61026b565b61049991369161031a565b60208151106104a9576020015190565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f746f55696e743235365f6f75744f66426f756e647300000000000000000000006044820152fdfea164736f6c6343000817000a";

    bytes32 internal constant PLUG_LIMITED_CALLS_FUSE_SALT =
        0x0000000000000000000000000000000000000000ceea342ba0e7ff3f4e03120a;

    address internal constant PLUG_LIMITED_CALLS_FUSE_ADDRESS =
        0x0014125FeA5200F04825fF4217246B0aF64eaf8d;

    bytes internal constant PLUG_NOUNS_ID_FUSE_INITCODE =
        hex"6080806040523461001657610572908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c90816311aecce21461004a57508063deb21fa2146100455763e5c5e9a31461004057600080fd5b61020a565b61017a565b346100d6577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc906060823601126100d65767ffffffffffffffff6004358181116100dd5761009c9036906004016100e1565b9290936024359283116100d95760609083360301126100d6576100d26100c66004840185876103f7565b60405191829182610114565b0390f35b80fd5b5080fd5b8280fd5b9181601f8401121561010f5782359167ffffffffffffffff831161010f576020838186019501011161010f57565b600080fd5b60208082528251818301819052939260005b858110610166575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006040809697860101520116010190565b818101830151848201604001528201610126565b3461010f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261010f57604051600435602082015260208152604081019080821067ffffffffffffffff831117610205577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc090826040526102008184610114565b030190f35b61026c565b3461010f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261010f5760043567ffffffffffffffff811161010f5761026461025e60209236906004016100e1565b906104ec565b604051908152f35b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761020557604052565b156102e357565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4e6f756e73546f6b656e49643a696e76616c69642d6e6f756e2d6964000000006044820152fd5b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561010f570180359067ffffffffffffffff821161010f5760200191813603831361010f57565b92919267ffffffffffffffff821161020557604051916103da60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116018461029b565b82948184528183011161010f578281602093846000960137010152565b90604051917f7d9f6db500000000000000000000000000000000000000000000000000000000835260c08360048173830bd73e4184cef73443c15111a1df14e495c7065afa9283156104e05760009361047b575b50610471926104616104789593610467936104ec565b146102dc565b6040810190610341565b3691610392565b90565b909260c0823d60c0116104d8575b8161049660c0938361029b565b810103126100d657815191608081015173ffffffffffffffffffffffffffffffffffffffff8116036100d95760a00151801515036100d657509161046761044b565b3d9150610489565b6040513d6000823e3d90fd5b6104f7913691610392565b6020815110610507576020015190565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f746f55696e743235365f6f75744f66426f756e647300000000000000000000006044820152fdfea164736f6c6343000817000a";

    bytes32 internal constant PLUG_NOUNS_ID_FUSE_SALT =
        0x0000000000000000000000000000000000000000634cf89557caff3f3865b44e;

    address internal constant PLUG_NOUNS_ID_FUSE_ADDRESS =
        0x00551Ac1B16aa2DC603E8A5952dacE0DfD413545;

    bytes internal constant PLUG_NOUNS_TRAIT_FUSE_INITCODE =
        hex"60803461007457601f610ef838819003918201601f19168301916001600160401b038311848410176100795780849260209460405283398101031261007457516001600160a01b0381169081900361007457600080546001600160a01b031916919091179055604051610e6890816100908239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6040608081526004908136101561001557600080fd5b600091823560e01c806304f9e59d1461075957806311aecce2146105ff57806325692962146105b45780633c41e6c91461059757806354d1f13d1461055157806362ecde7914610534578063715018a6146104d35780637600a734146104b65780638da5cb5b14610462578063ad9de14514610445578063bceac72e1461034a578063c0e7feed14610323578063e5c5e9a3146102d6578063e6b1a3ae14610272578063f04e283e146101c7578063f2fde38b146101275763fee81cf4146100dc57600080fd5b34610123576020600319360112610123573573ffffffffffffffffffffffffffffffffffffffff811681036101235760209263389a75e1600c525281600c20549051908152f35b8280fd5b838260206003193601126101c35780359073ffffffffffffffffffffffffffffffffffffffff8216918281036101bf5761015f610e23565b60601b156101b457507fffffffffffffffffffffffffffffffffffffffffffffffffffffffff748739278181547f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08580a35580f35b637448fbae8352601cfd5b8380fd5b5080fd5b838260206003193601126101c35780359073ffffffffffffffffffffffffffffffffffffffff8216918281036101bf576101ff610e23565b63389a75e1600c5283526020600c20908154421161026757508290557fffffffffffffffffffffffffffffffffffffffffffffffffffffffff748739278181547f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08580a35580f35b636f5e88188452601cfd5b8382346101c35760206003193601126101c3573573ffffffffffffffffffffffffffffffffffffffff81168091036101c3576102ac610e23565b7fffffffffffffffffffffffff000000000000000000000000000000000000000082541617815580f35b5082346103205760206003193601126103205781359067ffffffffffffffff821161032057506103149161030c9136910161086a565b810190610a1b565b82519182526020820152f35b80fd5b509134610320576020600319360112610320575061034360209235610a7e565b9051908152f35b50823461032057826003193601126103205750803590610368610903565b820361039d575b508161039992519160208301526024358183015280825261038f82610776565b519182918261089d565b0390f35b6103a561098f565b82036103b1575b61036f565b6103b96109d5565b821461036f576103c761081e565b82146103ac576103d5610949565b82146103ac576104419083519182917f08c379a0000000000000000000000000000000000000000000000000000000008352820160609060208152601f60208201527f4e6f756e735472616974467573653a696e76616c69642d73656c6563746f720060408201520190565b0390fd5b5050346101c357816003193601126101c3576020906103436109d5565b5050346101c357816003193601126101c35760209073ffffffffffffffffffffffffffffffffffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff7487392754915191168152f35b5050346101c357816003193601126101c35760209061034361098f565b8380600319360112610320576104e7610e23565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffff748739278181547f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a35580f35b5050346101c357816003193601126101c357602090610343610949565b83806003193601126103205763389a75e1600c52338152806020600c2055337ffa7b8eab7da67f412cc9575ed43464468f9bfbae89d1675917346ca6d8fe3c928280a280f35b5050346101c357816003193601126101c357602090610343610903565b83806003193601126103205763389a75e1600c523381526202a30042016020600c2055337fdbf36a107da19e49527a7176a1babf963b4b0ff8cde35ee35d6cd8f1f9ac7e1d8280a280f35b509034610123576003196060813601126101bf5767ffffffffffffffff9083358281116106f457610633903690860161086a565b906024359184831161075557606083360394850112610755578161065c91610663930190610a1b565b9190610a7e565b036106f8577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdd604482013592018212156106f45701928301359081116101bf576024830181360381136106f0576106b982610a31565b936106c6845195866107dd565b82855260248336920101116106f0578161039995926020928387013784010152519182918261089d565b8480fd5b8580fd5b60648560208651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601c60248201527f4e6f756e735472616974467573653a696e76616c69642d7472616974000000006044820152fd5b8780fd5b5050346101c357816003193601126101c35760209061034361081e565b6060810190811067ffffffffffffffff82111761079257604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6080810190811067ffffffffffffffff82111761079257604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761079257604052565b604051602081019060208252601860408201527f6163636573736f72792875696e7432353620696e646578290000000000000000606082015260608152610864816107c1565b51902090565b9181601f840112156108985782359167ffffffffffffffff8311610898576020838186019501011161089857565b600080fd5b60208082528251818301819052939260005b8581106108ef575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006040809697860101520116010190565b8181018301518482016040015282016108af565b604051602081019060208252601360408201527f686561642875696e7432353620696e6465782900000000000000000000000000606082015260608152610864816107c1565b604051602081019060208252601960408201527f6261636b67726f756e642875696e7432353620696e6465782900000000000000606082015260608152610864816107c1565b604051602081019060208252601660408201527f676c61737365732875696e7432353620696e6465782900000000000000000000606082015260608152610864816107c1565b604051602081019060208252601360408201527f626f64792875696e7432353620696e6465782900000000000000000000000000606082015260608152610864816107c1565b9190826040910312610898576020823592013590565b67ffffffffffffffff811161079257601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b519065ffffffffffff8216820361089857565b60409081517f7d9f6db500000000000000000000000000000000000000000000000000000000815260c08160048173830bd73e4184cef73443c15111a1df14e495c7065afa908115610db757600091610dc2575b508251907ff0503e80000000000000000000000000000000000000000000000000000000008252600482015260a081602481739c8ff314c9bc7f6e59a9d9225fb22946427edc035afa8015610db7576000808080948194610d40575b50610b37610903565b8603610c4a575050505060009165ffffffffffff839216905b8451917fffffffff000000000000000000000000000000000000000000000000000000006020840192168252602483015260248252610b8e82610776565b73ffffffffffffffffffffffffffffffffffffffff8354169151915afa903d15610c42573d91610bbd83610a31565b92610bca835194856107dd565b83523d6000602085013e5b15610be557506020815191012090565b606490517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4e6f756e735472616974467573653a74726169742d63616c6c2d6661696c65646044820152fd5b606091610bd5565b9091929350610c5761098f565b8503610c735750505060009165ffffffffffff83921690610b50565b90919250610c7f6109d5565b8403610c9a57505060009165ffffffffffff83921690610b50565b909150610ca561081e565b8303610cbf575060009165ffffffffffff83921690610b50565b9050610cc9610949565b8203610ce25760009165ffffffffffff83921690610b50565b82517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4e6f756e735472616974467573653a696e76616c69642d73656c6563746f72006044820152606490fd5b94509250505060a0823d60a011610daf575b81610d5f60a093836107dd565b810103126103205750610d7181610a6b565b90610d7e60208201610a6b565b90610d8a858201610a6b565b90610da36080610d9c60608401610a6b565b9201610a6b565b93929190939238610b2e565b3d9150610d52565b83513d6000823e3d90fd5b9060c0823d60c011610e1b575b81610ddc60c093836107dd565b8101031261032057815191608081015173ffffffffffffffffffffffffffffffffffffffff8116036101c35760a0015180151503610320575038610ad2565b3d9150610dcf565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff74873927543303610e4d57565b6382b429006000526004601cfdfea164736f6c6343000817000a";

    bytes32 internal constant PLUG_NOUNS_TRAIT_FUSE_SALT =
        0x0000000000000000000000000000000000000000f0d759e136f3ff3ff6e75121;

    address internal constant PLUG_NOUNS_TRAIT_FUSE_ADDRESS =
        0x0030E93680dE3B22545Bf1D3E9FEB5AfE01B3e9B;

    bytes internal constant PLUG_REVOCATION_FUSE_INITCODE =
        hex"6080806040523461001657610594908161001c8239f35b600080fdfe6040608081526004908136101561001557600080fd5b6000803560e01c8063108335b61461041e57806311aecce21461021a57806334e248531461014657806343b7af88146100d35763e5c5e9a31461005757600080fd5b346100d05760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100d05782359067ffffffffffffffff82116100d057506100c86100c060209473ffffffffffffffffffffffffffffffffffffffff9336910161049f565b81019061055b565b169051908152f35b80fd5b50903461014257807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101425760ff8160209373ffffffffffffffffffffffffffffffffffffffff610126610538565b1681528085528181206024358252855220541690519015158152f35b5080fd5b5090346101425760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101425761017f610538565b9073ffffffffffffffffffffffffffffffffffffffff815192166020830152602082528082019282841067ffffffffffffffff8511176101ee575090827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc092526101e981846104d2565b030190f35b806041867f4e487b71000000000000000000000000000000000000000000000000000000006024945252fd5b5091903461041a577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6060813601126104165767ffffffffffffffff9083358281116103b15761026d903690860161049f565b90602435918483116104125760608336039485011261041257816102a89173ffffffffffffffffffffffffffffffffffffffff93019061055b565b16865285602052838620604435875260205260ff84872054166103b5577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdd604482013592018212156103b157019083820135918183116103b157602481019183360383136103ad57845195601f85017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011687019182118783101761038157508452828552602483369201011161037d57816103799592602092838701378401015251918291826104d2565b0390f35b8480fd5b8760416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8680fd5b8580fd5b60648560208651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601a60248201527f506c75675265766f636174696f6e467573653a7265766f6b65640000000000006044820152fd5b8780fd5b8380fd5b8280fd5b5091903461041a57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261041a576024359182151580930361041657338452836020528184209035845260205282209060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00835416911617905580f35b9181601f840112156104cd5782359167ffffffffffffffff83116104cd57602083818601950101116104cd57565b600080fd5b60208082528251818301819052939260005b858110610524575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006040809697860101520116010190565b8181018301518482016040015282016104e4565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036104cd57565b908160209103126104cd573573ffffffffffffffffffffffffffffffffffffffff811681036104cd579056fea164736f6c6343000817000a";

    bytes32 internal constant PLUG_REVOCATION_FUSE_SALT =
        0x0000000000000000000000000000000000000000fe8edab340eeff3f7823e8b7;

    address internal constant PLUG_REVOCATION_FUSE_ADDRESS =
        0x003f6a29F5036BB288aDb8297E938DE175aD9666;

    bytes internal constant PLUG_TIMESTAMP_FUSE_INITCODE =
        hex"6080806040523461001657610619908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c90816311aecce21461004a575080631323692a146100455763e5c5e9a31461004057600080fd5b610223565b610181565b346100d6577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc906060823601126100d65767ffffffffffffffff6004358181116100dd5761009c9036906004016100e1565b9290936024359283116100d95760609083360301126100d6576100d26100c66004840185876103fc565b60405191829182610137565b0390f35b80fd5b5080fd5b8280fd5b9181601f8401121561010f5782359167ffffffffffffffff831161010f576020838186019501011161010f57565b600080fd5b60005b8381106101275750506000910152565b8181015183820152602001610117565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f6040936020845261017a8151809281602088015260208888019101610114565b0116010190565b3461010f5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261010f576004356fffffffffffffffffffffffffffffffff808216820361010f57602435908116810361010f576100d291604051917fffffffffffffffffffffffffffffffff00000000000000000000000000000000809260801b16602084015260801b166030820152602081526100c6816102e4565b3461010f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261010f5760043567ffffffffffffffff811161010f5761027d61027760409236906004016100e1565b9061053d565b82516fffffffffffffffffffffffffffffffff928316815291166020820152f35b906102b160209282815194859201610114565b0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761030057604052565b6102b5565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761030057604052565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561010f570180359067ffffffffffffffff821161010f5760200191813603831361010f57565b92919267ffffffffffffffff821161030057604051916103df60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160184610305565b82948184528183011161010f578281602093846000960137010152565b906104069161053d565b6fffffffffffffffffffffffffffffffff90811691166104f15742116104425761043861043f915b6040810190610346565b3691610397565b90565b6104ed6104666104bb6104536105d3565b61048f604051938492602084019061029e565b7f3a65787069726564000000000000000000000000000000000000000000000000815260080190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282610305565b6040519182917f08c379a000000000000000000000000000000000000000000000000000000000835260048301610137565b0390fd5b42106105035761043861043f9161042e565b6104ed6105146104bb6104536105d3565b7f3a6561726c790000000000000000000000000000000000000000000000000000815260060190565b91909161054b368483610397565b906010825110610575576010610565920151933691610397565b6020815110610575576020015190565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f746f55696e743132385f6f75744f66426f756e647300000000000000000000006044820152fd5b604051906105e0826102e4565b601182527f506c756754696d657374616d7046757365000000000000000000000000000000602083015256fea164736f6c6343000817000a";

    bytes32 internal constant PLUG_TIMESTAMP_FUSE_SALT =
        0x0000000000000000000000000000000000000000eb525773b5ffff3f974ef695;

    address internal constant PLUG_TIMESTAMP_FUSE_ADDRESS =
        0x004D933069C8207079f474C307790175F8e4C226;

    bytes internal constant PLUG_WINDOW_FUSE_INITCODE =
        hex"6080806040523461001657610cf9908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c90816311aecce21461009a57508063187ec818146100955780636158702c1461009057806361a769001461008b578063b8e9fccb14610086578063e8b27de414610081578063f395a30a1461007c5763f415fcb21461007757600080fd5b61062a565b610534565b6104d1565b6103a1565b610257565b61021c565b6101f6565b3461011b57606060031936011261011b576004359067ffffffffffffffff80831161011e573660238401121561011e5782600401359181831161011b57366024848601011161011b5760243591821161011b5761011761010b858560246101043660048901610122565b9201610771565b60405191829182610135565b0390f35b80fd5b5080fd5b908160609103126101305790565b600080fd5b60208082528251818301819052939260005b858110610187575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006040809697860101520116010190565b818101830151848201604001528201610147565b6024359063ffffffff8216820361013057565b60031960809101126101305763ffffffff60043581811681036101305791602435828116810361013057916044359081168103610130579060643560ff811681036101305790565b34610130576020610212610209366101ae565b92919091610a45565b6040519015158152f35b3461013057602060031936011261013057602061021261020960043560ff811663ffffffff90818360081c1691808460281c169360481c1693565b3461013057602060031936011261013057608060ff61029160043560ff811663ffffffff90818360081c1691808460281c169360481c1693565b91906040949394519463ffffffff92838092168752166020860152166040840152166060820152f35b9060209182820190519280835283518092528060408094019401926000905b8382106102e857505050505090565b8451805163ffffffff908116885290840151168684015294850194938201936001909101906102d9565b9092919260408201604083528151809152606083019060608160051b850101926020809101926000905b83821061035757505050505063ffffffff6020919416910152565b90919293948380610392837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08b6001960301865289516102ba565b9701920192019093929161033c565b34610130576040600319360112610130576103ba61019b565b63ffffffff808216907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe06104016103f86103f38561089b565b6106cd565b9380855261089b565b0160005b8181106104b657505061043360043560ff811663ffffffff90818360081c1691808460281c169360481c1693565b91929590959161044e6104468584610910565b864216610942565b96858816935b848782161061046c57604051806101178b8b83610312565b85816104ae8a61047e87878d97610bb4565b6104a76104a06104978b6104928989610989565b6109a3565b63ffffffff1690565b80936109b8565b528b6109b8565b500116610454565b6020906104c16106a8565b6060815282828701015201610405565b346101305760206003193601126101305760606104ec6106a8565b5261011761052061051860043560ff811663ffffffff90818360081c1691808460281c169360481c1693565b929050610bb4565b6040519182916020835260208301906102ba565b3461013057610542366101ae565b63ffffffff93919293908184169081156106005760ff169182156105d6578516106105ac5764ffffffff0093610117926cffffffff00000000000000000068ffffffff000000000060405197889760081b169360281b169160481b16171717829190602083019252565b60046040517f9961524d000000000000000000000000000000000000000000000000000000008152fd5b60046040517f0d877899000000000000000000000000000000000000000000000000000000008152fd5b60046040517fbf2b27fa000000000000000000000000000000000000000000000000000000008152fd5b346101305760606003193601126101305760043563ffffffff811681036101305761065361019b565b9060443560ff8116810361013057610117926105209260606106736106a8565b52610bb4565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051906020820182811067ffffffffffffffff8211176106c857604052565b610679565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f604051930116820182811067ffffffffffffffff8211176106c857604052565b92919267ffffffffffffffff82116106c85761075460207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f850116016106cd565b938285528282011161013057816000926020928387013784010152565b61077c913691610711565b602081511061083d5761020960206107af92015160ff811663ffffffff90818360081c1691808460281c169360481c1693565b15610813576040810135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe181360301821215610130570180359067ffffffffffffffff821161013057602001813603811361013057610810913691610711565b90565b60046040517f3cb9a58a000000000000000000000000000000000000000000000000000000008152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f746f55696e743235365f6f75744f66426f756e647300000000000000000000006044820152fd5b67ffffffffffffffff81116106c85760051b60200190565b6108bb6106a8565b9060608252565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b906201518063ffffffff8093160291821691820361090b57565b6108c2565b91909163ffffffff8080941691160291821691820361090b57565b906201518063ffffffff8093160191821161090b57565b91909163ffffffff8080941691160191821161090b57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b9063ffffffff80911691821561099e57160490565b61095a565b9063ffffffff80911691821561099e57160690565b80518210156109cc5760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff63ffffffff8093160191821161090b57565b63ffffffff918216908216039190821161090b57565b9192909263ffffffff92834216928482168410610ad95783610a6691610cbd565b156105d657610a758184610a2f565b84861615610ac85785610a91610a9c94959697610a9693610989565b610910565b90610942565b9283168210159283610aaf575b50505090565b610abf9293509061049791610942565b11388080610aa9565b50610ad4929450610942565b161190565b60046040517ff60555a4000000000000000000000000000000000000000000000000000000008152fd5b90610b106103f38361089b565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0610b3e829461089b565b016000805b828110610b505750505050565b604090815182810181811067ffffffffffffffff8211176106c85760209352838152828481830152828701015201610b43565b63ffffffff16801561090b577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b9091610c959350610bc36108b3565b90610bce8484610942565b92620151808063ffffffff8097160494610be9878716610b03565b855287878216965b888116610c14610c09610c03846108f1565b88610942565b868c82160690610a2f565b90610c26610c22838a610cbd565b1590565b610cb657610c69610c64610c90938d808216908b1611600014610ca857610c5f8a610c53868f5b516109b8565b519063ffffffff169052565b61092b565b6109fb565b808c168b1015610c9c57506020610c8386925b8b516109b8565b51019063ffffffff169052565b610b83565b8890610bf1565b610c8360209192610c7c565b610c5f81610c53868f610c4d565b5050610b83565b63ffffffff916201518090831604821660040182811161090b5760ff600760019482869516931606161c16149056fea164736f6c6343000817000a";

    bytes32 internal constant PLUG_WINDOW_FUSE_SALT =
        0x0000000000000000000000000000000000000000cd185f86dafaff3f6ddb9482;

    address internal constant PLUG_WINDOW_FUSE_ADDRESS =
        0x001F12d1ba28125eCB0930fae9DFDC687Aa4Cb1D;

    bytes internal constant PLUG_INITCODE =
        hex"6080806040523461001657610be0908161001c8239f35b600080fdfe608060409080825260048036101561001657600080fd5b600091823560e01c90816306fdde03146102e55750806357f8dc5e1461027757806395d89b41146101f85763fe5aa4221461005057600080fd5b602091827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101f557813567ffffffffffffffff928382116101f157366023830112156101f1578101359283116101ed5760246005933660248260051b850101116101e9579183906100c4846107e4565b956100d18951978861044f565b848752601f196100e0866107e4565b0188875b8281106101d9575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9d82360301925b8581106101995750505050505083519280840190808552835180925280868601968360051b870101940192955b82871061014f5785850386f35b909192938280610189837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08a6001960301865288516103a7565b9601920196019592919092610142565b8481831b84010135848112156101d557906101b9866001938601016107fc565b6101c3828b610b90565b526101ce818a610b90565b5001610115565b8780fd5b60608a82018301528a91016100e4565b8380fd5b5080fd5b8280fd5b80fd5b5082346101f157827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101f157610273925080519161023983610404565b82527f504c554700000000000000000000000000000000000000000000000000000000602083015251918291602083526020830190610382565b0390f35b5082907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc926020843601126101f55781359367ffffffffffffffff85116101ed57839085360301126101f55750610273926102d291016107fc565b90519182916020835260208301906103a7565b91849150346101e957837ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e957610273935061032583610404565b82527f506c756700000000000000000000000000000000000000000000000000000000602083015251918291602083526020830190610382565b60005b8381106103725750506000910152565b8181015183820152602001610362565b90601f19601f6020936103a08151809281875287808801910161035f565b0116010190565b90808251908181526020809101926020808460051b8301019501936000915b8483106103d65750505050505090565b90919293949584806103f483601f1986600196030187528a51610382565b98019301930191949392906103c6565b6040810190811067ffffffffffffffff82111761042057604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f601f19910116810190811067ffffffffffffffff82111761042057604052565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21813603018212156104a5570190565b600080fd5b3573ffffffffffffffffffffffffffffffffffffffff811681036104a55790565b359073ffffffffffffffffffffffffffffffffffffffff821682036104a557565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1823603018112156104a557016020813591019167ffffffffffffffff82116104a5578160051b360383136104a557565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1823603018112156104a557016020813591019167ffffffffffffffff82116104a55781360383136104a557565b601f8260209493601f19938186528686013760008582860101520116010190565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1823603018112156104a5570190565b9060e081019173ffffffffffffffffffffffffffffffffffffffff9081610608826104cb565b1683526020610619818301836104ec565b80919660e0848801525261010090818601926005928260051b8801019780946000915b84831061068757505050505050509061068060c0836040829501356040870152606081013560608701526080810135608087015260a081013560a0870152016104cb565b1691015290565b9091929394959a997fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008a82030183526106c08c836105b0565b9060409180357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa1823603018112156104a5576107388261074292959495018486528d61070b826104cb565b16858701526107276060918b810135838901528681019061053f565b9091608088015260a087019161058f565b91888101906104ec565b9093888184039101528082528782019188828c1b8201019480946000915b848310610787575050505050505084806001929d9c9d9c019301930191959493929061063c565b909192939495968f8c6107d583866107c684956107b08f8f601f198f60019c030190528a6105b0565b906107ba826104cb565b1684528581019061053f565b9190928186820152019161058f565b99019701959493019190610760565b67ffffffffffffffff81116104205760051b60200190565b5a9073ffffffffffffffffffffffffffffffffffffffff90816108276108228380610472565b6104aa565b16918061083f60c06108398580610472565b016104aa565b1633148015610b78575b15610b1a576040908151927f558ab7b400000000000000000000000000000000000000000000000000000000845260049160249560209586600482015283357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21853603018112156104a557818061090c6108d08b948b6024850152896064850191016105e2565b6108dc858a018a61053f565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc85840301604486015261058f565b0381855afa908115610b0f57600091610ad0575b50600061097091610932868397610472565b9088519b8c96879586947f9a6ea6b10000000000000000000000000000000000000000000000000000000086526060600487015260648601906105e2565b92166024840152604483015203925af1948515610ac557600095610997575b505050505090565b9490919293943d8083833e6109ac818361044f565b81019285828503126101f157815167ffffffffffffffff92838211610ac1570194601f9385601f880112156101f5578651956109e7876107e4565b996109f484519b8c61044f565b878b5289808c019860051b8a010198828a116101e9578a8101985b8a8a10610a2c57505050505050505050505050388080808061098f565b8951888111610abd57820184603f82011215610abd578c81015190898211610a9257908a91610a658f601f198b5195850116018461044f565b818352868983830101116101d55791610a878f949285948b868501910161035f565b815201990198610a0f565b848760418b7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8580fd5b8480fd5b82513d6000823e3d90fd5b878181969495963d8311610b08575b610ae9818361044f565b810103126101ed57519084821682036101f55750909291906000610920565b503d610adf565b86513d6000823e3d90fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f506c75673a696e76616c69642d6578656375746f7200000000000000000000006044820152fd5b5080610b8960c06108398580610472565b1615610849565b8051821015610ba45760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea164736f6c6343000817000a";

    bytes32 internal constant PLUG_SALT =
        0x0000000000000000000000000000000000000000abb2881a5deaff3f509cf189;

    address internal constant PLUG_ADDRESS =
        0x00d53D85529E89Cf07fbc55279558E3166e57821;

    /**
     * @notice Deploy (if needed) and return the PlugBaseFeeFuse contract instance.
     * @return $plugBaseFeeFuse The PlugBaseFeeFuse contract instance.
     */
    function plugBaseFeeFuse()
        internal
        returns (PlugBaseFeeFuse $plugBaseFeeFuse)
    {
        if (_extcodesize(PLUG_BASE_FEE_FUSE_ADDRESS) == 0) {
            address reality = _safeCreate2(
                PLUG_BASE_FEE_FUSE_SALT, PLUG_BASE_FEE_FUSE_INITCODE
            );
            require(
                reality == PLUG_BASE_FEE_FUSE_ADDRESS,
                "Etcher: Reality check failed"
            );
        }
        $plugBaseFeeFuse = PlugBaseFeeFuse(payable(PLUG_BASE_FEE_FUSE_ADDRESS));
    }

    /**
     * @notice Deploy (if needed) and return the PlugBlockNumberFuse contract instance.
     * @return $plugBlockNumberFuse The PlugBlockNumberFuse contract instance.
     */
    function plugBlockNumberFuse()
        internal
        returns (PlugBlockNumberFuse $plugBlockNumberFuse)
    {
        if (_extcodesize(PLUG_BLOCK_NUMBER_FUSE_ADDRESS) == 0) {
            address reality = _safeCreate2(
                PLUG_BLOCK_NUMBER_FUSE_SALT, PLUG_BLOCK_NUMBER_FUSE_INITCODE
            );
            require(
                reality == PLUG_BLOCK_NUMBER_FUSE_ADDRESS,
                "Etcher: Reality check failed"
            );
        }
        $plugBlockNumberFuse =
            PlugBlockNumberFuse(payable(PLUG_BLOCK_NUMBER_FUSE_ADDRESS));
    }

    /**
     * @notice Deploy (if needed) and return the PlugClampFuse contract instance.
     * @return $plugClampFuse The PlugClampFuse contract instance.
     */
    function plugClampFuse() internal returns (PlugClampFuse $plugClampFuse) {
        if (_extcodesize(PLUG_CLAMP_FUSE_ADDRESS) == 0) {
            address reality =
                _safeCreate2(PLUG_CLAMP_FUSE_SALT, PLUG_CLAMP_FUSE_INITCODE);
            require(
                reality == PLUG_CLAMP_FUSE_ADDRESS,
                "Etcher: Reality check failed"
            );
        }
        $plugClampFuse = PlugClampFuse(payable(PLUG_CLAMP_FUSE_ADDRESS));
    }

    /**
     * @notice Deploy (if needed) and return the PlugFactory contract instance.
     * @return $plugFactory The PlugFactory contract instance.
     */
    function plugFactory() internal returns (PlugFactory $plugFactory) {
        if (_extcodesize(PLUG_FACTORY_ADDRESS) == 0) {
            address reality =
                _safeCreate2(PLUG_FACTORY_SALT, PLUG_FACTORY_INITCODE);
            require(
                reality == PLUG_FACTORY_ADDRESS, "Etcher: Reality check failed"
            );
        }
        $plugFactory = PlugFactory(payable(PLUG_FACTORY_ADDRESS));
    }

    /**
     * @notice Deploy (if needed) and return the PlugLimitedCallsFuse contract instance.
     * @return $plugLimitedCallsFuse The PlugLimitedCallsFuse contract instance.
     */
    function plugLimitedCallsFuse()
        internal
        returns (PlugLimitedCallsFuse $plugLimitedCallsFuse)
    {
        if (_extcodesize(PLUG_LIMITED_CALLS_FUSE_ADDRESS) == 0) {
            address reality = _safeCreate2(
                PLUG_LIMITED_CALLS_FUSE_SALT, PLUG_LIMITED_CALLS_FUSE_INITCODE
            );
            require(
                reality == PLUG_LIMITED_CALLS_FUSE_ADDRESS,
                "Etcher: Reality check failed"
            );
        }
        $plugLimitedCallsFuse =
            PlugLimitedCallsFuse(payable(PLUG_LIMITED_CALLS_FUSE_ADDRESS));
    }

    /**
     * @notice Deploy (if needed) and return the PlugNounsIdFuse contract instance.
     * @return $plugNounsIdFuse The PlugNounsIdFuse contract instance.
     */
    function plugNounsIdFuse()
        internal
        returns (PlugNounsIdFuse $plugNounsIdFuse)
    {
        if (_extcodesize(PLUG_NOUNS_ID_FUSE_ADDRESS) == 0) {
            address reality = _safeCreate2(
                PLUG_NOUNS_ID_FUSE_SALT, PLUG_NOUNS_ID_FUSE_INITCODE
            );
            require(
                reality == PLUG_NOUNS_ID_FUSE_ADDRESS,
                "Etcher: Reality check failed"
            );
        }
        $plugNounsIdFuse = PlugNounsIdFuse(payable(PLUG_NOUNS_ID_FUSE_ADDRESS));
    }

    /**
     * @notice Deploy (if needed) and return the PlugNounsTraitFuse contract instance.
     * @return $plugNounsTraitFuse The PlugNounsTraitFuse contract instance.
     */
    function plugNounsTraitFuse()
        internal
        returns (PlugNounsTraitFuse $plugNounsTraitFuse)
    {
        if (_extcodesize(PLUG_NOUNS_TRAIT_FUSE_ADDRESS) == 0) {
            address reality = _safeCreate2(
                PLUG_NOUNS_TRAIT_FUSE_SALT, PLUG_NOUNS_TRAIT_FUSE_INITCODE
            );
            require(
                reality == PLUG_NOUNS_TRAIT_FUSE_ADDRESS,
                "Etcher: Reality check failed"
            );
        }
        $plugNounsTraitFuse =
            PlugNounsTraitFuse(payable(PLUG_NOUNS_TRAIT_FUSE_ADDRESS));
    }

    /**
     * @notice Deploy (if needed) and return the PlugRevocationFuse contract instance.
     * @return $plugRevocationFuse The PlugRevocationFuse contract instance.
     */
    function plugRevocationFuse()
        internal
        returns (PlugRevocationFuse $plugRevocationFuse)
    {
        if (_extcodesize(PLUG_REVOCATION_FUSE_ADDRESS) == 0) {
            address reality = _safeCreate2(
                PLUG_REVOCATION_FUSE_SALT, PLUG_REVOCATION_FUSE_INITCODE
            );
            require(
                reality == PLUG_REVOCATION_FUSE_ADDRESS,
                "Etcher: Reality check failed"
            );
        }
        $plugRevocationFuse =
            PlugRevocationFuse(payable(PLUG_REVOCATION_FUSE_ADDRESS));
    }

    /**
     * @notice Deploy (if needed) and return the PlugTimestampFuse contract instance.
     * @return $plugTimestampFuse The PlugTimestampFuse contract instance.
     */
    function plugTimestampFuse()
        internal
        returns (PlugTimestampFuse $plugTimestampFuse)
    {
        if (_extcodesize(PLUG_TIMESTAMP_FUSE_ADDRESS) == 0) {
            address reality = _safeCreate2(
                PLUG_TIMESTAMP_FUSE_SALT, PLUG_TIMESTAMP_FUSE_INITCODE
            );
            require(
                reality == PLUG_TIMESTAMP_FUSE_ADDRESS,
                "Etcher: Reality check failed"
            );
        }
        $plugTimestampFuse =
            PlugTimestampFuse(payable(PLUG_TIMESTAMP_FUSE_ADDRESS));
    }

    /**
     * @notice Deploy (if needed) and return the PlugWindowFuse contract instance.
     * @return $plugWindowFuse The PlugWindowFuse contract instance.
     */
    function plugWindowFuse()
        internal
        returns (PlugWindowFuse $plugWindowFuse)
    {
        if (_extcodesize(PLUG_WINDOW_FUSE_ADDRESS) == 0) {
            address reality =
                _safeCreate2(PLUG_WINDOW_FUSE_SALT, PLUG_WINDOW_FUSE_INITCODE);
            require(
                reality == PLUG_WINDOW_FUSE_ADDRESS,
                "Etcher: Reality check failed"
            );
        }
        $plugWindowFuse = PlugWindowFuse(payable(PLUG_WINDOW_FUSE_ADDRESS));
    }

    /**
     * @notice Deploy (if needed) and return the Plug contract instance.
     * @return $plug The Plug contract instance.
     */
    function plug() internal returns (Plug $plug) {
        if (_extcodesize(PLUG_ADDRESS) == 0) {
            address reality = _safeCreate2(PLUG_SALT, PLUG_INITCODE);
            require(reality == PLUG_ADDRESS, "Etcher: Reality check failed");
        }
        $plug = Plug(payable(PLUG_ADDRESS));
    }

    /**
     * @notice Deploys a contract via 0age's immutable create 2 factory for testing.
     * @param $salt The salt to use for the deployment.
     * @param $initializationCode The initialization code for the contract.
     * @return $deployment The address of the deployed contract.
     */
    function _safeCreate2(
        bytes32 $salt,
        bytes memory $initializationCode
    )
        private
        returns (address $deployment)
    {
        // Canonical address of 0age's immutable create 2 factory.
        address c2f = 0x0000000000FFe8B47B3e2130213B802212439497;
        if (_extcodesize(c2f) == 0) {
            bytes memory ic2fBytecode =
                hex"60806040526004361061003f5760003560e01c806308508b8f1461004457806364e030871461009857806385cf97ab14610138578063a49a7c90146101bc575b600080fd5b34801561005057600080fd5b506100846004803603602081101561006757600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166101ec565b604080519115158252519081900360200190f35b61010f600480360360408110156100ae57600080fd5b813591908101906040810160208201356401000000008111156100d057600080fd5b8201836020820111156100e257600080fd5b8035906020019184600183028401116401000000008311171561010457600080fd5b509092509050610217565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b34801561014457600080fd5b5061010f6004803603604081101561015b57600080fd5b8135919081019060408101602082013564010000000081111561017d57600080fd5b82018360208201111561018f57600080fd5b803590602001918460018302840111640100000000831117156101b157600080fd5b509092509050610592565b3480156101c857600080fd5b5061010f600480360360408110156101df57600080fd5b508035906020013561069e565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205460ff1690565b600083606081901c33148061024c57507fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008116155b6102a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260458152602001806107746045913960600191505060405180910390fd5b606084848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250604051855195965090943094508b93508692506020918201918291908401908083835b6020831061033557805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090920191602091820191016102f8565b51815160209384036101000a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018019909216911617905260408051929094018281037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00183528085528251928201929092207fff000000000000000000000000000000000000000000000000000000000000008383015260609890981b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602183015260358201969096526055808201979097528251808203909701875260750182525084519484019490942073ffffffffffffffffffffffffffffffffffffffff81166000908152938490529390922054929350505060ff16156104a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603f815260200180610735603f913960400191505060405180910390fd5b81602001825188818334f5955050508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461053a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260468152602001806107b96046913960600191505060405180910390fd5b50505073ffffffffffffffffffffffffffffffffffffffff8116600090815260208190526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790559392505050565b6000308484846040516020018083838082843760408051919093018181037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001825280845281516020928301207fff000000000000000000000000000000000000000000000000000000000000008383015260609990991b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000166021820152603581019790975260558088019890985282518088039098018852607590960182525085519585019590952073ffffffffffffffffffffffffffffffffffffffff81166000908152948590529490932054939450505060ff909116159050610697575060005b9392505050565b604080517fff000000000000000000000000000000000000000000000000000000000000006020808301919091523060601b6021830152603582018590526055808301859052835180840390910181526075909201835281519181019190912073ffffffffffffffffffffffffffffffffffffffff81166000908152918290529190205460ff161561072e575060005b9291505056fe496e76616c696420636f6e7472616374206372656174696f6e202d20636f6e74726163742068617320616c7265616479206265656e206465706c6f7965642e496e76616c69642073616c74202d206669727374203230206279746573206f66207468652073616c74206d757374206d617463682063616c6c696e6720616464726573732e4661696c656420746f206465706c6f7920636f6e7472616374207573696e672070726f76696465642073616c7420616e6420696e697469616c697a6174696f6e20636f64652ea265627a7a723058202bdc55310d97c4088f18acf04253db593f0914059f0c781a9df3624dcef0d1cf64736f6c634300050a0032";
            /// @solidity memory-safe-assembly
            assembly {
                let m := mload(0x40)
                mstore(m, 0xb4d6c782) // `etch(address,bytes)`.
                mstore(add(m, 0x20), c2f)
                mstore(add(m, 0x40), 0x40)
                let n := mload(ic2fBytecode)
                mstore(add(m, 0x60), n)
                for { let i := 0 } lt(i, n) { i := add(0x20, i) } {
                    mstore(
                        add(add(m, 0x80), i),
                        mload(add(add(ic2fBytecode, 0x20), i))
                    )
                }
                let vmAddress := 0x7109709ECfa91a80626fF3989D68f67F5b1DD12D
                if iszero(
                    call(
                        gas(),
                        vmAddress,
                        0,
                        add(m, 0x1c),
                        add(n, 0x64),
                        0x00,
                        0x00
                    )
                ) { revert(0, 0) }
            }
        }
        /// @solidity memory-safe-assembly
        assembly {
            let m := mload(0x40)
            let n := mload($initializationCode)
            mstore(m, 0x64e03087) // `safeCreate2(bytes32,bytes)`.
            mstore(add(m, 0x20), $salt)
            mstore(add(m, 0x40), 0x40)
            mstore(add(m, 0x60), n)
            // prettier-ignore
            for { let i := 0 } lt(i, n) { i := add(i, 0x20) } {
                mstore(
                    add(add(m, 0x80), i),
                    mload(add(add($initializationCode, 0x20), i))
                )
            }
            if iszero(call(gas(), c2f, 0, add(m, 0x1c), add(n, 0x64), m, 0x20))
            {
                returndatacopy(m, m, returndatasize())
                revert(m, returndatasize())
            }
            $deployment := mload(m)
        }
    }

    /**
     * @notice Determine and retrieve the extcodesize of `deployment`.
     * @param $deployment The address to check.
     * @return $result The size of the code at `deployment`.
     */
    function _extcodesize(address $deployment)
        private
        view
        returns (uint256 $result)
    {
        /// @solidity memory-safe-assembly
        assembly {
            $result := extcodesize($deployment)
        }
    }
}
