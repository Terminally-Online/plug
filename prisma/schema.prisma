generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["fullTextSearch"]
}

generator dbml {
    provider = "prisma-dbml-generator"
}

generator zod {
    provider              = "zod-prisma"
    output                = "./zod"
    relationModel         = "default"
    modelCase             = "PascalCase"
    modelSuffix           = "Model"
    useDecimalJs          = true
    prismaJsonNullability = true
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model ConsoleColumn {
    id String @id @default(uuid())

    // ---------------------------------------------------------------------------
    // Core
    // ---------------------------------------------------------------------------
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt

    // ---------------------------------------------------------------------------
    // Fields
    // ---------------------------------------------------------------------------
    key   String
    index Int
    width Int?

    // ---------------------------------------------------------------------------
    // Many-to-one
    // ---------------------------------------------------------------------------
    console   Console @relation(fields: [consoleId], references: [id])
    consoleId String
}

model Console {
    // ---------------------------------------------------------------------------
    // Core
    // ---------------------------------------------------------------------------
    id        String   @id @unique @default(uuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt

    // ---------------------------------------------------------------------------
    // One-to-many 
    // ---------------------------------------------------------------------------
    columns ConsoleColumn[]
}

model UserSocket {
    // ---------------------------------------------------------------------------
    // Core
    // ---------------------------------------------------------------------------
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt

    // ---------------------------------------------------------------------------
    // Fields
    // ---------------------------------------------------------------------------
    name          String
    userAddress   String
    socketAddress String

    // ---------------------------------------------------------------------------
    // Identification
    // ---------------------------------------------------------------------------
    @@id([userAddress, socketAddress])
}

model Workflow {
    // ---------------------------------------------------------------------------
    // Core
    // ---------------------------------------------------------------------------
    id        String   @id @default(uuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt

    // ---------------------------------------------------------------------------
    // Fields
    // ---------------------------------------------------------------------------
    userAddress      String
    name             String   @default("Untitled Plug")
    isCurated        Boolean  @default(false)
    isPrivate        Boolean  @default(false)
    actions          String   @default("[]")
    color            String
    tags             String[]
    workflowForkedId String?
}

model FeatureRequest {
    // ---------------------------------------------------------------------------
    // Core
    // ---------------------------------------------------------------------------
    id        String   @id @default(uuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt

    // ---------------------------------------------------------------------------
    // Fields
    // ---------------------------------------------------------------------------
    userAddress String
    context     String
    message     String?
}

model OpenseaCollection {
    // ---------------------------------------------------------------------------
    // Core
    // ---------------------------------------------------------------------------
    slug        String   @id @unique
    createdDate DateTime @default(now())

    // ---------------------------------------------------------------------------
    // Fields
    // ---------------------------------------------------------------------------
    collection              String
    name                    String
    description             String
    imageUrl                String
    bannerImageUrl          String
    owner                   String
    category                String
    isDisabled              Boolean
    isNsfw                  Boolean
    traitOffersEnabled      Boolean
    collectionOffersEnabled Boolean
    openseaUrl              String
    projectUrl              String
    wikiUrl                 String
    discordUrl              String
    telegramUrl             String
    twitterUsername         String
    instagramUsername       String
    totalSupply             Int
    chain                   String
}
