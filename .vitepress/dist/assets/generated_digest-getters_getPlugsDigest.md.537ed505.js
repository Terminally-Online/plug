import{_ as s,o as a,c as n,Q as e}from"./chunks/framework.850b4e59.js";const g=JSON.parse('{"title":"getPlugsDigest","description":"","frontmatter":{},"headers":[],"relativePath":"generated/digest-getters/getPlugsDigest.md","filePath":"generated/digest-getters/getPlugsDigest.md","lastUpdated":null}'),l={name:"generated/digest-getters/getPlugsDigest.md"},t=e(`<h1 id="getplugsdigest" tabindex="-1">getPlugsDigest <a class="header-anchor" href="#getplugsdigest" aria-label="Permalink to &quot;getPlugsDigest&quot;">​</a></h1><p>Encode <a href="/generated/base-types/Plugs.html">Plugs</a> data into a digest hash that has been localized to the domain of the contract.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><ul><li><code>$input</code> : <a href="/generated/base-types/Plugs.html">Plugs</a> : The <code>Plugs</code> data to encode.</li></ul><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><ul><li><code>$digest</code> : <code>bytes32</code> : The digest hash of the encoded <a href="/generated/base-types/Plugs.html">Plugs</a> data.</li></ul><h2 id="onchain-implementation" tabindex="-1">Onchain Implementation <a class="header-anchor" href="#onchain-implementation" aria-label="Permalink to &quot;Onchain Implementation&quot;">​</a></h2><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-nipIV" id="tab-tzB_D-b" checked="checked"><label for="tab-tzB_D-b">Types.sol:getPlugsDigest</label></div><div class="blocks"><div class="language-solidity vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">solidity</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getPlugsDigest</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">Plugs</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">memory</span><span style="color:#E1E4E8;"> $</span><span style="color:#FFAB70;">input</span></span>
<span class="line"><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">view</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">returns</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">bytes32</span><span style="color:#E1E4E8;"> $</span><span style="color:#FFAB70;">digest</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">	$digest </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">keccak256</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#79B8FF;">abi</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">encodePacked</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#9ECBFF;">&quot;\\x19\\x01&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">			domainHash,</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#B392F0;">getPlugsHash</span><span style="color:#E1E4E8;">($input)</span></span>
<span class="line"><span style="color:#E1E4E8;">		)</span></span>
<span class="line"><span style="color:#E1E4E8;">	);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getPlugsDigest</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">Plugs</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">memory</span><span style="color:#24292E;"> $</span><span style="color:#E36209;">input</span></span>
<span class="line"><span style="color:#24292E;">) </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">view</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">returns</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">bytes32</span><span style="color:#24292E;"> $</span><span style="color:#E36209;">digest</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">	$digest </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">keccak256</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#005CC5;">abi</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">encodePacked</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#032F62;">&quot;\\x19\\x01&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">			domainHash,</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#6F42C1;">getPlugsHash</span><span style="color:#24292E;">($input)</span></span>
<span class="line"><span style="color:#24292E;">		)</span></span>
<span class="line"><span style="color:#24292E;">	);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></div></div>`,8),p=[t];function o(c,r,i,E,y,d){return a(),n("div",null,p)}const h=s(l,[["render",o]]);export{g as __pageData,h as default};
