import{_ as s,o as n,c as a,Q as e}from"./chunks/framework.850b4e59.js";const u=JSON.parse('{"title":"getLivePinSigner","description":"","frontmatter":{},"headers":[],"relativePath":"generated/signer-getters/getLivePinSigner.md","filePath":"generated/signer-getters/getLivePinSigner.md","lastUpdated":null}'),l={name:"generated/signer-getters/getLivePinSigner.md"},p=e(`<h1 id="getlivepinsigner" tabindex="-1">getLivePinSigner <a class="header-anchor" href="#getlivepinsigner" aria-label="Permalink to &quot;getLivePinSigner&quot;">​</a></h1><p>Get the signer of a <a href="/generated/base-types/LivePin.html">LivePin</a> data type.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><ul><li><code>$input</code> : <a href="/generated/base-types/LivePin.html">LivePin</a> : The <code>LivePin</code> data to encode.</li></ul><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><ul><li><code>$signer</code> : <code>address</code> : The signer of the <a href="/generated/base-types/LivePin.html">LivePin</a> data.</li></ul><h2 id="onchain-implementation" tabindex="-1">Onchain Implementation <a class="header-anchor" href="#onchain-implementation" aria-label="Permalink to &quot;Onchain Implementation&quot;">​</a></h2><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-zI6CC" id="tab-m8y5MA6" checked="checked"><label for="tab-m8y5MA6">Types.sol:getLivePinSigner</label></div><div class="blocks"><div class="language-solidity vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">solidity</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getLivePinSigner</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">LivePin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">memory</span><span style="color:#E1E4E8;"> $</span><span style="color:#FFAB70;">input</span></span>
<span class="line"><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">view</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">returns</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">address</span><span style="color:#E1E4E8;"> $</span><span style="color:#FFAB70;">signer</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">	$signer </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getPinDigest</span><span style="color:#E1E4E8;">($input.pin).</span><span style="color:#B392F0;">recover</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">		$input.signature</span></span>
<span class="line"><span style="color:#E1E4E8;">	);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getLivePinSigner</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">LivePin</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">memory</span><span style="color:#24292E;"> $</span><span style="color:#E36209;">input</span></span>
<span class="line"><span style="color:#24292E;">) </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">view</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">returns</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">address</span><span style="color:#24292E;"> $</span><span style="color:#E36209;">signer</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">	$signer </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getPinDigest</span><span style="color:#24292E;">($input.pin).</span><span style="color:#6F42C1;">recover</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">		$input.signature</span></span>
<span class="line"><span style="color:#24292E;">	);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></div></div>`,8),t=[p];function o(r,i,c,d,y,E){return n(),a("div",null,t)}const h=s(l,[["render",o]]);export{u as __pageData,h as default};
