import{_ as s,o as a,c as n,Q as e}from"./chunks/framework.850b4e59.js";const h=JSON.parse('{"title":"Live Pairs","description":"","frontmatter":{},"headers":[],"relativePath":"decoders/eip-712/signed-pairs.md","filePath":"decoders/eip-712/signed-pairs.md","lastUpdated":1699680977000}'),l={name:"decoders/eip-712/signed-pairs.md"},p=e(`<h1 id="live-pairs" tabindex="-1">Live Pairs <a class="header-anchor" href="#live-pairs" aria-label="Permalink to &quot;Live Pairs&quot;">​</a></h1><p>At the very base level <code>Plug</code> has been designed to operate on top of <a href="/decoders/eip-712.html">EIP-712</a> to enable the signing and verification of structured data.</p><p>The framework extends the EIP by introducing the concept of a <code>LivePair</code>. With <code>LivePairs</code> the onchain framework operates with the implicit assumption that all <code>Plugs</code> are delivered in a predefined and standardized data layout.</p><h2 id="what-is-a-live-pair" tabindex="-1">What is a Live Pair? <a class="header-anchor" href="#what-is-a-live-pair" aria-label="Permalink to &quot;What is a Live Pair?&quot;">​</a></h2><p>A <code>LivePair</code> is a pair of structured data that has been signed by a single EVM address. The first piece of data is the <code>data</code> and the second is the <code>signature</code>. The <code>data</code> is the structured data that has been signed and the <code>signature</code> is the signature of the <code>data</code> signed by the EVM address.</p><p>Let&#39;s look at a simple example where we have <code>Mail</code> that we want to send from <code>Alice</code> to <code>Bob</code>. In this example, <code>Alice</code> is the <code>Signer</code> and <code>Bob</code> is the <code>Recipient</code>. The first step is to declare the types of our protocol:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-HW3l1" id="tab-pudgnhN" checked="checked"><label for="tab-pudgnhN">constants.ts</label></div><div class="blocks"><div class="language-typescript vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">types</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  Mail: [</span></span>
<span class="line"><span style="color:#E1E4E8;">    { name: </span><span style="color:#9ECBFF;">&quot;from&quot;</span><span style="color:#E1E4E8;">, type: </span><span style="color:#9ECBFF;">&quot;Person&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { name: </span><span style="color:#9ECBFF;">&quot;to&quot;</span><span style="color:#E1E4E8;">, type: </span><span style="color:#9ECBFF;">&quot;Person&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { name: </span><span style="color:#9ECBFF;">&quot;contents&quot;</span><span style="color:#E1E4E8;">, type: </span><span style="color:#9ECBFF;">&quot;string&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">  ],</span></span>
<span class="line"><span style="color:#E1E4E8;">  Person: [</span></span>
<span class="line"><span style="color:#E1E4E8;">    { name: </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;">, type: </span><span style="color:#9ECBFF;">&quot;string&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { name: </span><span style="color:#9ECBFF;">&quot;wallet&quot;</span><span style="color:#E1E4E8;">, type: </span><span style="color:#9ECBFF;">&quot;address&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">  ],</span></span>
<span class="line"><span style="color:#E1E4E8;">  LiveMail: [</span></span>
<span class="line"><span style="color:#E1E4E8;">    { name: </span><span style="color:#9ECBFF;">&quot;mail&quot;</span><span style="color:#E1E4E8;">, type: </span><span style="color:#9ECBFF;">&quot;Mail&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { name: </span><span style="color:#9ECBFF;">&quot;signature&quot;</span><span style="color:#E1E4E8;">, type: </span><span style="color:#9ECBFF;">&quot;bytes&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">  ],</span></span>
<span class="line"><span style="color:#E1E4E8;">} </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">types</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  Mail: [</span></span>
<span class="line"><span style="color:#24292E;">    { name: </span><span style="color:#032F62;">&quot;from&quot;</span><span style="color:#24292E;">, type: </span><span style="color:#032F62;">&quot;Person&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { name: </span><span style="color:#032F62;">&quot;to&quot;</span><span style="color:#24292E;">, type: </span><span style="color:#032F62;">&quot;Person&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { name: </span><span style="color:#032F62;">&quot;contents&quot;</span><span style="color:#24292E;">, type: </span><span style="color:#032F62;">&quot;string&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  ],</span></span>
<span class="line"><span style="color:#24292E;">  Person: [</span></span>
<span class="line"><span style="color:#24292E;">    { name: </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">, type: </span><span style="color:#032F62;">&quot;string&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { name: </span><span style="color:#032F62;">&quot;wallet&quot;</span><span style="color:#24292E;">, type: </span><span style="color:#032F62;">&quot;address&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  ],</span></span>
<span class="line"><span style="color:#24292E;">  LiveMail: [</span></span>
<span class="line"><span style="color:#24292E;">    { name: </span><span style="color:#032F62;">&quot;mail&quot;</span><span style="color:#24292E;">, type: </span><span style="color:#032F62;">&quot;Mail&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { name: </span><span style="color:#032F62;">&quot;signature&quot;</span><span style="color:#24292E;">, type: </span><span style="color:#032F62;">&quot;bytes&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  ],</span></span>
<span class="line"><span style="color:#24292E;">} </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div></div></div><p>Of note here is that the <code>LiveMail</code> type is a nested <code>Mail</code> type with an additional <code>signature</code> field. This is the <code>LivePair</code> that we are looking for. This signals:</p><ul><li><code>Mail</code> is the signed message.</li><li><code>LiveMail</code> is the type consumed by the onchain function.</li><li><code>signature</code> is the signature of the <code>Mail</code> signed by the <code>from</code> field of the <code>Mail</code>.</li></ul><p>Why is it called a <code>LivePair</code>?</p><ul><li>The type MUST be prefixed with <code>Live</code>.</li><li>The type MUST be a nested type of the <code>TypedData</code> that is being signed.</li><li>The type MUST always have a <code>signature</code> field that is of type <code>bytes</code>.</li></ul><h2 id="the-resulting-assumption" tabindex="-1">The Resulting Assumption <a class="header-anchor" href="#the-resulting-assumption" aria-label="Permalink to &quot;The Resulting Assumption&quot;">​</a></h2><p><code>LivePairs</code> enables the onchain protocol of <code>Plug</code> to operate with the assumption if an <code>Plug</code> is being used or verified, it is always in the form of the <code>LivePair</code> of the message being executed. In <a href="https://www.typescriptlang.org/docs/handbook/2/generics.html" target="_blank" rel="noreferrer">generic form</a>, this can be thought of as:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-Bm9kW" id="tab-mxBCTbi" checked="checked"><label for="tab-mxBCTbi">LivePair.ts</label></div><div class="blocks"><div class="language-typescript vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TypedDataToLivePlug</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">K</span><span style="color:#E1E4E8;">, </span><span style="color:#B392F0;">U</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Record</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#9ECBFF;">&quot;signature&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">\`0x\${</span><span style="color:#79B8FF;">string</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  [</span><span style="color:#B392F0;">TK</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">K</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Lowercase</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TK</span><span style="color:#E1E4E8;">&gt;]</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">U</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">type</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TypedDataToLivePlug</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">K</span><span style="color:#24292E;">, </span><span style="color:#6F42C1;">U</span><span style="color:#24292E;">&gt; </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Record</span><span style="color:#24292E;">&lt;</span><span style="color:#032F62;">&quot;signature&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">\`0x\${</span><span style="color:#005CC5;">string</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">&gt; </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  [</span><span style="color:#6F42C1;">TK</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">K</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Lowercase</span><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">string</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TK</span><span style="color:#24292E;">&gt;]</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">U</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></div></div><p>This may seem confusing if you are not familiar with <code>Typescript</code> so let&#39;s break it down:</p><ul><li><code>TypedDataToLivePlug</code> is a generic type that takes two arguments: <code>K</code> and <code>U</code>. <ul><li><code>K</code> is the type of the <code>TypedData</code> that is being signed.</li><li><code>U</code> is the type of the <code>TypedData</code> that is being consumed by the onchain function.</li></ul></li><li>The return type is a <code>Record</code> that has a <code>signature</code> field that is of type <code>string</code> and a <code>TypedData</code> field that is of type <code>U</code> with a lowercase key.</li></ul><p>In the case of our <code>Mail</code> example, this results in the <code>LiveMail</code> type of:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-IMxIl" id="tab-OiwC92L" checked="checked"><label for="tab-OiwC92L">LiveMail.ts</label></div><div class="blocks"><div class="language-typescript vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">LiveMail</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">signature</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">mail</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">from</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FFAB70;">name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FFAB70;">wallet</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    };</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">to</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FFAB70;">name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FFAB70;">wallet</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    };</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">contents</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  };</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">type</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">LiveMail</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">signature</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">mail</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">from</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#E36209;">name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#E36209;">wallet</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    };</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">to</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#E36209;">name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#E36209;">wallet</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    };</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">contents</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  };</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div></div></div><p>Due to the simple architecture in place you can immediately pop over to <code>Plug</code> with the <code>LiveMail</code> type and start using it onchain with:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-fUppC" id="tab-3lKg0Wk" checked="checked"><label for="tab-3lKg0Wk">Types.sol</label></div><div class="blocks"><div class="language-solidity vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">solidity</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getLiveMailSigner</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">LiveMail</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">calldata</span><span style="color:#E1E4E8;"> $</span><span style="color:#FFAB70;">signedMail</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">bytes32</span><span style="color:#E1E4E8;"> $</span><span style="color:#FFAB70;">domainHash</span></span>
<span class="line"><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">view</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">returns</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">address</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getMailHash</span><span style="color:#E1E4E8;">($signedMail.mail, $domainHash).</span><span style="color:#B392F0;">recover</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">        $signedMail.signature</span></span>
<span class="line"><span style="color:#E1E4E8;">    );</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getLiveMailSigner</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">LiveMail</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">calldata</span><span style="color:#24292E;"> $</span><span style="color:#E36209;">signedMail</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">bytes32</span><span style="color:#24292E;"> $</span><span style="color:#E36209;">domainHash</span></span>
<span class="line"><span style="color:#24292E;">) </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">view</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">returns</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">address</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getMailHash</span><span style="color:#24292E;">($signedMail.mail, $domainHash).</span><span style="color:#6F42C1;">recover</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">        $signedMail.signature</span></span>
<span class="line"><span style="color:#24292E;">    );</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></div></div><p>With just these few lines of <code>Solidity</code> we now have the ability to:</p><ul><li>Securely send and receive Mail.</li><li>Verify that the Mail was sent by the <code>Signer</code>.</li><li>Verify that the Mail has not been tampered with.</li></ul><p>While this is a simplified example, it is important to understand that this is the foundation of the <code>Plug</code> framework. With this simple architecture, the framework can be used to build complex protocols that are secure, modular, and easy to use.</p>`,23),o=[p];function t(c,r,i,y,E,d){return a(),n("div",null,o)}const b=s(l,[["render",t]]);export{h as __pageData,b as default};
