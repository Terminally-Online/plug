import{_ as e,o as t,c as o,Q as i}from"./chunks/framework.6d94f49f.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"todo.md","filePath":"todo.md","lastUpdated":1699736593000}'),a={name:"todo.md"},l=i("<blockquote><p>Hello, you have stumbled upon my working todo for Plug. It lives in the documentation here because I bounce from problem to problem without a real scope defined for the territory it resides within. I acknowledge this project is not setup in a way that enables simple contributions. That is intentional for now. Focusing on what matters and that is not a nicer README. That said, below you can see my todo, active notes and things as they were completed.</p></blockquote><p>TODO:</p><ul><li><p>[x] Figure out what to do about naming.</p><ul><li>[x] Get the domain</li><li>[x] Deploy on the new domains</li><li>[x] My favorite idea so far has been Plug cause 1) it is plug and play 2) it makes contracts plug and play with one another. It is also really short and I can get a domain that&#39;s easy to navigate to. Also, it&#39;s so simple that I finally have logo ideas.</li><li>[x] Rename the Github repositories</li><li>[x] Rename the Discord</li><li>[x] Deprecate the old npm packages</li><li>[ ] Deploy documentation at docs.onplug.io</li></ul></li><li><p>[ ] Make sure our API endpoints are protected</p></li><li><p>[ ] Think about the relayer implementation as this is what really has my interest.</p></li><li><p>[ ] Update <code>authority</code> nomenclature to just use <code>permission</code> for increased conistency.</p></li></ul><p>IN PROGRESS:</p><ul><li>[ ]</li></ul><p>PENDING:</p><ul><li>[ ] Finish the documentation. <ul><li>[ ] Remove the index page.</li><li>[ ] Make the branding confirm to the branding that has now been defined.</li></ul></li></ul><p>BUGS:</p><ul><li>[ ]</li></ul><p>WANTS:</p><ul><li>[ ] Ability to declare a set of allowed cavets and domains. Notes: This is effectively <code>localization</code> for an api and its contained data.</li></ul><p>RELEASING:</p><ul><li><p>[x] Make sure the landing page is responsive.</p></li><li><p>[x] Get the raw client implementation functional with raw trpc connections.</p></li><li><p>[x] Package up the trpc connector into the sdk to offer a more explicit integration path. Notes: This is where the <code>p<wbr>rocess.env.API_URL</code> and managed functions would be exposed.</p></li><li><p>[x] Make sure that we can encode and decode each enforcer.</p></li></ul><p>DONE:</p><ul><li>[x] Setup Supabase to be used for the production database on the landing site. <ul><li>[x] How are you supposed to integrate schema generation into your CI/CD?</li></ul></li><li>[x] Deploy to Vercel</li></ul>",15),n=[l];function s(r,p,d,c,u,h){return t(),o("div",null,n)}const _=e(a,[["render",s]]);export{f as __pageData,_ as default};
